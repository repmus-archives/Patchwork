(in-package :pw)(make-win 'c-pw-window "1Combinatorial/sort-list" 2621442 17301993 (list (abst 'c-abstract-m 'user-abstraction::plus*1557 "plus*" nil 15401171 (list) 'nil 'nil (make-win 'c-pw-window "plus*" 2686980 11076184 (list (sbox 'c-abstract-out 'absout "absout" nil 197135 (list "plus*")) (sbox 'c-pw-resize-x 'const "const" nil 4260027 (list "second") 2228284) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -65534 (list "Il existe  la possibilité d'ouvrir une troisième entrée <key>, pour une fonction lisp.Les éléments de <lst> seront, alors,  ordonnées en fonction du résultatde leur  évaluation  par <key> et parle prédicat  <test>.") 9175220) (sbox 'c-pw-resize-x 'const "const" nil 852155 (list "((1 9) (2 8) (3 7) (4 6) (5 5) (6 4) (7 3))") 2228500) (sbox 'c-pw-functional 'sort-list "sort-list" nil 4980997 (list "(1 2)" "<" "nil"))) (list (list 4 0 3) (list 4 2 1)) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3211533 (list "OBS!! \"sort-list\" ne retire-pas les doubles!!!!") 3604602) (sbox 'c-pw-functional 'sort-list "sort-list" nil 5636202 (list "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -262141 (list ".                 SORT-LIST.     Ce module sert à ordonner une liste.") 2883876) (sbox 'c-pw-resize-x 'const "const" nil 2949172 (list "(9 1 3 2 7 8 8 2 6 4 1 5)") 2228390) (sbox 'c-pw-resize-x 'const "const" nil 8519999 (list "(9 1 3 2 7 8 8 2 6 4 1 5)") 2228390) (sbox 'c-pw-functional 'sort-list "sort-list" nil 11796830 (list "(1 2)" ">")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7995398 (list "Par défaut l'ordre est ascendant, mais comme le module est extensible il existe la possibilité d'ouvrir une deuxième  entrée (<test>) pour permetre le choix de l'ordre.si <test> est '<' l'ordre sera ascendante, si <test> est '>' l'ordre sera descendante et si <test> est '=' l'ordre sera maintenu la même. ") 6619438)) (list (list 2 0 4) (list 6 0 5)) t)