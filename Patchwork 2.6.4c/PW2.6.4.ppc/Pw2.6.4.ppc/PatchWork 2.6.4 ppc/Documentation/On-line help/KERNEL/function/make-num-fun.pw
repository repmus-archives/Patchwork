(in-package :pw)(make-win 'c-pw-window "1function/make-num-fun" 2621442 25494101 (list (abst 'c-abstract-m 'user-abstraction::plus "plus" nil 22216833 (list) 'nil 'nil (make-win 'c-pw-window "plus" 2883637 26607975 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 23068810 (list ":::^^^ f(x y)") 2031718) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 4653145 (list "(f(x)= 4 - (4/127) * x )") 2228433) (sbox 'c-abstract-out 'absout "absout" nil 590267 (list "plus")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 11927601 (list ".               EXEMPLE2Il est possible de définir une fonction avec plus d'une variable") 4129031) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -131025 (list ".               EXEMPLE1Il est possible de définir une fonction et de l'utiliser avec le module <funcall>") 4129031) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 9765003 (list ":::^^^ f(x)") 1900628) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 21102660 (list ":::y-->>>") 1900612) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7143650 (list "<<--x:::") 1900612) (sbox 'c-pw-functional 'funcall "funcall" nil 7274634 (list "+" 68.0)) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 16449608 (list "(f(x y)= 4 + y - (4/127) * x )") 2228433) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19529960 (list "<<--x:::") 1900612) (sbox 'c-pw-functional 'funcall "funcall" nil 19792012 (list "+" 68.0 21))) (list (list 8 0 1) (list 11 0 9)) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 14287098 (list ":::x-->>") 1900612) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 22675808 (list ":::^^^ f(x)") 1900628) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 4980737 (list "Lorsque <fexpr> commence avec (f(x)=...),les arguments sont pris de la liste donnée ou sont déduits du corps de <fexpr> et collectés dans leur ordre d'apparition.    Les variables locales sont automatiquement prises en compte.     <make-num-fun> a deux syntaxes possibles:    a> syntaxe Lisp standard,i.e. (f(x) = (-(* x x) x))     b> format apparenté à C,i.e. (f(x)= (x * x) - x). N.B.:l'unique différence entre cette notation et le     standard C est qu'il faut disposer des espaces entre les opérateurs.    La définition du nom de variable au début de (f(x)=...) est optionnelle.Si l'utilisateur ne l'inclut    pas,le programme extraira de lui-même celle ou celles qui sont impliquées.") 8913488) (sbox 'c-pw-resize-x 'numbox "numbox" nil 14549325 (list 68) 2228270) (sbox 'c-patch 'g/ "g/" nil 14614932 (list 4.0 127)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 20905992 (list "Pour savoir PLUS double-cliquer sur <plus>--->>>>") 2818166) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -196462 (list ". MAKE-NUM-FUN      ") 1900650) (sbox 'c-patch 'g* "g*" nil 17629534 (list 0 0)) (sbox 'c-patch 'g- "g-" nil 20250975 (list 4 0)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1900594 (list ".             <make-num-fun> .    construit un object fonctionel LISP. ") 3014961) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 14614549 (list "(f(x)= 4 - (4/127) * x )") 2228433) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19333249 (list ":::fonction équivalente-->>>") 1900734)) (list (list 8 0 4) (list 8 1 5) (list 9 1 8)) t)