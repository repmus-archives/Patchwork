(in-package :pw)(make-win 'c-pw-window "1list/posn-match" 2752542 21365164 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 4653097 (list "::L'entrée <list> accepte une liste quelconque et l'entrée <l-nth> est un schéma de rangs (à plusieurs niveaux) qui sera appliqué à <list>.") 2818397) (sbox 'c-pw-resize-x 'const "const" nil 11403298 (list "(a b c d e f g h i j k l m n o p q r s t u v w x y z)") 2228556) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 196610 (list ".                         POSN-MATCH.  Ce module est une généralisation de la fonction \"nth\" de LISP.") 2752917) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7995449 (list "::Par exemple le schéma (0 (1) 2 2 4 ((0) (1))) appliqué à la liste ci-dessous nous rendra : :::PW->(a (b) c c e ((a) (b)))") 2818347) (sbox 'c-pw-resize-x 'const "const" nil 15138997 (list "(0 (1) 2 2 4 ((0) (1)))") 2228383) (sbox 'c-patch 'posn-match "posn-match" nil 18088090 (list "(1 2)" 0))) (list (list 5 0 1) (list 5 1 4)) t)