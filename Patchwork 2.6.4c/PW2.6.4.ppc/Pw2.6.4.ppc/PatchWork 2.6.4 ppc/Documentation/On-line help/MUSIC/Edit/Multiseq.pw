(in-package :pw)(make-win 'c-pw-window "5Edit/Multiseq" 2752514 23790061 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 18874624 (list "Pour plus d'informations taper 'h' avec la fenêtre d'édition de \"multiseq\" ouverte.") 3801287) (sbox 'c-patch-polifmn-mod 'multiseq "multiseq" nil 11403465 (list "obj" "obj" "obj" "obj") nil (list nil nil (list 39649880 1.0 4))) (abst 'c-abstract-m 'user-abstraction::alea-seq "alea-seq" nil 12583211 (list 39 56) '((common-lisp-user::inf epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::sup epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "alea-seq" 22216882 24641801 (list (sbox 'c-patch 'g* "g*" nil 7602301 (list 0 100)) (sbox 'c-patch 'g-random "g-random" nil 4718719 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" nil 196652 (list "inf" 1)) (sbox 'c-abstract-in 'absin "absin" nil 786569 (list "sup" 2)) (sbox 'c-abstract-out 'absout "absout" nil 14090317 (list "alea-seq")) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 11010136 (list 10 0))) (list (list 0 0 1) (list 1 0 2) (list 1 1 3) (list 4 0 5) (list 5 1 0)) nil)) (abst 'c-abstract-m 'user-abstraction::alea-seq "alea-seq" nil 4587530 (list 93 121) '((common-lisp-user::inf epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::sup epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "alea-seq" 22216882 24641801 (list (sbox 'c-patch 'g* "g*" nil 7602301 (list 0 100)) (sbox 'c-patch 'g-random "g-random" nil 4718719 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" nil 196652 (list "inf" 1)) (sbox 'c-abstract-in 'absin "absin" nil 786569 (list "sup" 2)) (sbox 'c-abstract-out 'absout "absout" nil 14090317 (list "alea-seq")) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 11010136 (list 10 0))) (list (list 0 0 1) (list 1 0 2) (list 1 1 3) (list 4 0 5) (list 5 1 0)) nil)) (abst 'c-abstract-m 'user-abstraction::alea-seq "alea-seq" nil 4456672 (list 80 93) '((common-lisp-user::inf epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::sup epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "alea-seq" 22216882 24641801 (list (sbox 'c-patch 'g* "g*" nil 7602301 (list 0 100)) (sbox 'c-patch 'g-random "g-random" nil 4718719 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" nil 196652 (list "inf" 1)) (sbox 'c-abstract-in 'absin "absin" nil 786569 (list "sup" 2)) (sbox 'c-abstract-out 'absout "absout" nil 14090317 (list "alea-seq")) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 11010136 (list 10 0))) (list (list 0 0 1) (list 1 0 2) (list 1 1 3) (list 4 0 5) (list 5 1 0)) nil)) (abst 'c-abstract-m 'user-abstraction::alea-seq "alea-seq" nil 10878985 (list 59 79) '((common-lisp-user::inf epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::sup epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "alea-seq" 22216882 24641801 (list (sbox 'c-patch 'g* "g*" nil 7602301 (list 0 100)) (sbox 'c-patch 'g-random "g-random" nil 4718719 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" nil 196652 (list "inf" 1)) (sbox 'c-abstract-in 'absin "absin" nil 786569 (list "sup" 2)) (sbox 'c-abstract-out 'absout "absout" nil 14090317 (list "alea-seq")) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 11010136 (list 10 0))) (list (list 0 0 1) (list 1 0 2) (list 1 1 3) (list 4 0 5) (list 5 1 0)) nil)) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 12189797 (list 6000 25 75 100 0 1 200) nil (list nil nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -262095 (list ".                MULTISEQ.  Ce module permet la construction de . séquences polyphoniques à partir de la .connection de plusieurs modules “chordseq”’.") 4260125) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 11665801 (list 6000 25 75 100 0 1 300) nil (list nil nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19333126 (list "Pour ouvrir le module \"multiseq\" il sufit de double-cliquer sur son corps, ou de sélectionner le module et taper 'o'") 3539176) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 4718695 (list 6000 25 75 100 0 1 0) nil (list nil nil)) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 5308733 (list 6000 25 75 100 0 1 100) nil (list nil nil))) (list (list 1 0 10) (list 1 1 11) (list 1 2 6) (list 1 3 8) (list 6 0 5) (list 8 0 2) (list 10 0 3) (list 11 0 4)) t)