(in-package :pw)(make-win 'c-pw-window "10midi/chord-in" 2424876 28967434 (list (abst 'c-abstract-m 'user-abstraction::plus10 "plus10" t 27328750 (list) 'nil 'nil (make-win 'c-pw-window "plus10" 3080218 20971913 (list (sbox 'c-abstract-out 'absout "absout" nil 393644 (list "plus10")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -65469 (list ". Il est possible d’ajuster une fenêtre de lecture des événements MIDI par l’ouverture d’une troisième entrée optionnelle <delay>") 3211551) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 15925324 (list "la valeur de <delay> est donnée en centièmes de secondes et elle établie une plage de temps dans la quelle seulement le premier événement sera pris en compte.") 4063500) (sbox 'c-pw-midi-in:c-pw-midi-in-top 'c-pw-midi-in:m-data "m-data" nil 3670185 (list)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 3997969 (list (note (list 6000 100 0 0 nil 1 100 nil))) nil :midic) (sbox 'c-pw-midi-in:c-pw-chord-in 'c-pw-midi-in:chord-in "chord-in" nil 12320944 (list "()" "(1 2)" 10)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 13566035 (list "<delay> -->>") 1900632)) (list (list 4 0 3) (list 5 0 3) (list 5 1 4)) nil)) (sbox 'c-pw-midi-in:c-pw-chord-in 'c-pw-midi-in:chord-in "chord-in" nil 14614652 (list "()" "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -261995 (list ".                       CHORD-IN. Cet ensemble de  modules permet l’accumulation.      d’évenements MIDI-ON (seulement).") 3604823) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3145867 (list "Une configuration standard est indiquée ici. Un module “chord” est connecté à la sortie de “m-data” (pour recevoir est accumuler les événements MIDI), et la sortie de “chord” est connectée à l’entrée <patch> de “chord-in”. ") 4260209) (sbox 'c-patch-chord-box-m 'chord "chord" nil 8257756 (list (note (list 6000 100 0 0 nil 1 41 nil) (list 6200 100 0 0 nil 1 53 nil))) nil :midic) (sbox 'c-pw-midi-in:c-pw-midi-in-top 'c-pw-midi-in:m-data "m-data" nil 8388747 (list)) (sbox 'c-pw-midi-in:c-pw-midi-in-top 'c-pw-midi-in:m-data "m-data" nil 10420254 (list)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 17498110 (list "ATTENTION2!!!!!!!!!NE PAS OUBLIER DE DESACTIVER LES MODULES, SI NON TOUTES LES ÉVALUATIONS EN PATCHWORK DEVIENDRONT TRES, TRES LENTES!!!!!!!!!!!") 8913035) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7602450 (list ".  MISE EN MARCHEPour mettre en marche cet ensemblede modules il est nécessaire d’évaluer le module “chord-in”en ce moment le module “m-data” (qui reçoit et accumule les événements MIDI) retourne à chaque évaluation “UN OBJET ACCORD” constituépar les note-in  accumulés, et à chaque nouveau événement MIDI, le patch connécté à l’entrée <patch> du module “note-in” est évalué. C’est-à-dire, le module “chord” reçoit les données.pour “désactiver” la réception d’événements MIDI il sufit de choisir <desactivate> dans le menu latérale du module “chord-in”.ensuite fermer le module “chord” et l’évaluer.") 19333361) (sbox 'c-pw-midi-in:c-pw-chord-in 'c-pw-midi-in:chord-in "chord-in" nil 12910608 (list "()" "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 26476544 (list "Pour savoir plus double-cliquer sur <plus10> ->->->->->->->->->") 2228451)) (list (list 1 0 5) (list 1 1 4) (list 4 0 5) (list 9 0 6)) t)