(in-package :pw)(make-win 'c-pw-window "demo-mem-sec1" 2555904 36242143 (list (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 2818063 (list "(1 2)" "(1 2)" 1 1 0) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 1)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (sbox 'c-pw-functional 'mapcar "mapcar" nil 13828300 (list "list" "(1 2)")) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 27787481 (list 6000 100 75 100 0 5) nil (list nil nil)) (sbox 'c-pw-functional 'play-object "play-object" nil 32702605 (list "nil" 5)) (sbox 'c-pw-functional 'play-object "play-object" nil 21234035 (list "nil" 1)) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 2752881 (list 6000 60 75 100 0 1) nil (list nil nil)) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 2490835 (list 1 1 9)) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 9568876 (list 6000 100 75 100 0 1 0) nil (list nil nil)) (sbox 'c-patch 'epw::l-distor/3 "l-distor/3" nil 7995894 (list 100 500 8 460 "(0.6 0.9)")) (sbox 'c-patch-chord-box-m 'chord "chord" nil 10748207 (list (note (list 3600 100 0 1 nil 1 100 nil) (list 3600 100 0 0 nil 1 100 nil) (list 3650 100 0 2 nil 1 100 nil) (list 3700 100 0 3 nil 1 100 nil) (list 3750 100 0 4 nil 1 100 nil) (list 3850 100 0 5 nil 1 100 nil) (list 4100 100 0 6 nil 1 100 nil) (list 4350 100 0 7 nil 1 100 nil) (list 4600 100 0 8 nil 1 100 nil))) nil :midic) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 12386316 (list "(1 2)" "(1 2)" 2 2 2) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 1)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 7536652 (list "(1 2)" "(1 2)" 1 2 1) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 1)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 524595 (list (note (list 3850 100 0 40 nil 1 100 nil) (list 3950 100 0 58 nil 1 100 nil) (list 4100 100 0 76 nil 1 100 nil) (list 4350 100 0 94 nil 1 100 nil) (list 4700 100 0 112 nil 1 100 nil) (list 5100 100 0 130 nil 1 100 nil) (list 5550 100 0 148 nil 1 100 nil) (list 6400 100 0 166 nil 1 100 nil) (list 6400 100 0 184 nil 1 100 nil))) nil :midic) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 17235980 (list "(1 2)" "(1 2)" 2 2 3) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (sbox 'c-pw-resize-x 'reverse "reverse" nil 5177909 (list "(1 2)") 2228270) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 7405679 (list "(1 2)" "(1 2)" 2 2 6) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 22085644 (list "(1 2)" "(1 2)" 2 1 4) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 12189805 (list "(1 2)" "(1 2)" 2 2 7) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 17105004 (list "(1 2)" "(1 2)" 2 2 8) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 28901581 19333456 (list (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-ch"))) (list (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 0) (list 3 0 5) (list 3 1 0) (list 8 0 1)) nil)) (sbox 'c-pw-functional 'list "list" nil 23003243 (list 0 0 0 0 0 0 0 0 0)) (sbox 'c-pw-functional 'trigger "trigger" nil 33161473 (list "patch" "patch")) (sbox 'c-pw-midi-in:c-pw-delay-box 'c-pw-midi-in:delay "delay" nil 30605633 (list 1080 "()")) (abst 'c-abstract-m 'user-abstraction::sec-mod "sec-mod" nil 22872583 (list 7) '((common-lisp-user::posit epw::numbers? (:view-size 917540 :value 7 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "sec-mod" 16187395 26608075 (list (sbox 'c-abstract-in 'absin "absin" t 23199752 (list "posit" 1)) (sbox 'c-patch 'g-scaling/sum "g-scaling/sum" t 11010364 (list "(1 2)" 500)) (sbox 'c-pw-resize-x 'const "const" t 19464236 (list "(1 2 3 5)") 2228345) (sbox 'c-patch 'arithm-ser "arithm-ser" t 14745917 (list 1 1 7)) (sbox 'c-pw-resize-x 'reverse "reverse" t 18874722 (list "(1 2)") 2228270) (sbox 'c-patch 'epw::l-distor/2 "l-distor/2" t 21889341 (list 50 400 "(0.5 0.7)")) (abst 'c-abstract-m 'user-abstraction::ring/pos-seq716 "ring/pos-seq716" t 12976214 (list "(1 2)" "(1 2)" 7 4 4) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 7 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum)))) 'nil (make-win 'c-pw-window "RING/POS-SEQ716" 4981197 19595601 (list (sbox 'c-abstract-in 'absin "absin" nil 12124391 (list "hq2" 3)) (sbox 'c-abstract-in 'absin "absin" nil 13565962 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 262289 (list "posit" 3)) (sbox 'c-abstract-in 'absin "absin" nil 3342571 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 4325455 (list "list1" 1)) (sbox 'c-patch 'posn-match "posn-match" nil 6422768 (list "(1 2)" 0)) (sbox 'c-abstract-out 'absout "absout" nil 17105045 (list "ring/pos-seq")) (sbox 'c-pw-resize-x 'flat-once "flat-once" nil 10485810 (list "(1 2)") 2228270) (sbox 'c-patch 'posn-match "posn-match" nil 7536714 (list "(1 2)" 0)) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10879097 (list 6000 6600 1 1 0 0 1))) (list (list 5 0 3) (list 5 1 2) (list 6 0 9) (list 8 0 4) (list 8 1 2) (list 9 0 8) (list 9 1 5) (list 9 2 1) (list 9 3 0)) nil)) (sbox 'c-patch 'epw::l-distor/2 "l-distor/2" t 5570870 (list 100 500 "(0.5 0.7)")) (sbox 'c-patch 'arithm-ser "arithm-ser" t 196846 (list 1 1 7)) (sbox 'c-pw-resize-x 'reverse "reverse" t 2294101 (list "(1 2)") 2228270) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" t 13959369 (list 6000 100 75 100 0 1) nil (list t nil)) (sbox 'c-patch-chord-box-m 'chord "chord" t 1048731 (list (note (list 3850 100 0 40 nil 1 100 nil) (list 3950 100 0 58 nil 1 100 nil) (list 4100 100 0 76 nil 1 100 nil) (list 4350 100 0 94 nil 1 100 nil) (list 4700 100 0 112 nil 1 100 nil) (list 5100 100 0 130 nil 1 100 nil) (list 5550 100 0 148 nil 1 100 nil) (list 6400 100 0 166 nil 1 100 nil) (list 6400 100 0 184 nil 1 100 nil))) nil :midic) (sbox 'c-patch-chord-box-m 'chord "chord" t 2818125 (list (note (list 3600 100 0 1 nil 1 100 nil) (list 3600 100 0 0 nil 1 100 nil) (list 3650 100 0 2 nil 1 100 nil) (list 3700 100 0 3 nil 1 100 nil) (list 3750 100 0 4 nil 1 100 nil) (list 3850 100 0 5 nil 1 100 nil) (list 4100 100 0 6 nil 1 100 nil) (list 4350 100 0 7 nil 1 100 nil) (list 4600 100 0 8 nil 1 100 nil))) nil :midic) (sbox 'c-pw-resize-x 'const "const" t 10944697 (list "(1 2 6)") 2228345) (sbox 'c-abstract-out 'absout "absout" nil 20316377 (list "sec-mod"))) (list (list 1 0 7) (list 4 0 3) (list 5 2 4) (list 6 0 12) (list 6 1 11) (list 6 2 0) (list 6 3 13) (list 6 4 2) (list 7 2 9) (list 9 0 8) (list 10 0 6) (list 10 1 1) (list 10 2 5) (list 14 0 10)) nil)) (sbox 'c-pw-functional 'play-object "play-object" nil 25690679 (list "nil" 5)) (sbox 'c-pw-functional 'play-object "play-object" nil 196980 (list "nil" 1)) (sbox 'c-pw-functional 'mapcar "mapcar" nil 10289358 (list "append" "(1 2)" "(1 2)")) (abst 'c-abstract-m 'user-abstraction::ring/pos-ch "ring/pos-ch" nil 2818158 (list "(1 2)" "(1 2)" 1 2 5) '((common-lisp-user::list1 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::list2 list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::hq2 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::hq1 epw::fix>0 (:view-size 917540 :value 1 :min-val 1 :max-val 999999 :doc-string "num" :type-list (fixnum))) (common-lisp-user::posit epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "ring/pos-ch" 25952712 17826156 (list (sbox 'c-abstract-out 'absout "absout" nil 15335658 (list "ring/pos-ch")) (sbox 'c-pw-functional 'epw::ring-harm "ring-harm" nil 10616965 (list 6000 6600 1 1 0 1 2)) (sbox 'c-patch 'posn-match "posn-match" nil 7274582 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 6160636 (list "(1 2)" 0)) (sbox 'c-abstract-in 'absin "absin" nil 4063323 (list "list1" 1)) (sbox 'c-abstract-in 'absin "absin" nil 3080439 (list "list2" 2)) (sbox 'c-abstract-in 'absin "absin" nil 12976128 (list "hq1" 3)) (sbox 'c-abstract-in 'absin "absin" nil 11862259 (list "hq2" 3)) (sbox 'c-abstract-in 'absin "absin" nil 157 (list "posit" 3))) (list (list 0 0 1) (list 1 0 2) (list 1 1 3) (list 1 2 6) (list 1 3 7) (list 2 0 4) (list 2 1 8) (list 3 0 5) (list 3 1 8)) nil)) (sbox 'c-pw-functional 'mapcar "mapcar" nil 6815955 (list "list" "(1 2)")) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 16712049 (list 6000 60 75 100 0 1) nil (list nil nil)) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 7864694 (list 6000 60 75 100 0 1) nil (list nil nil)) (sbox 'c-patch 'g-scaling/sum "g-scaling/sum" nil 13894129 (list "(1 2)" 1200)) (sbox 'c-pw-functional 'play-object "play-object" nil 13107570 (list "nil" 1)) (sbox 'c-pw-functional 'play-object "play-object" nil 16908911 (list "nil" 5)) (sbox 'c-patch 'epw::l*curb/2 "l*curb/2" nil 16777709 (list 1.1 2.5 "(1 2)")) (sbox 'c-pw-functional 'play-object "play-object" nil 32113125 (list "nil" 1)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 23986599 (list (note (list 7800 800 0 40 nil 1 90 nil) (list 7900 800 0 58 nil 1 90 nil) (list 8250 800 0 76 nil 1 90 nil) (list 8600 800 0 94 nil 1 90 nil) (list 8700 800 0 112 nil 1 90 nil) (list 8850 800 0 130 nil 1 90 nil) (list 9100 800 0 148 nil 1 90 nil) (list 9300 800 0 166 nil 1 90 nil) (list 9400 800 0 184 nil 1 90 nil))) nil :object)) (list (list 0 0 12) (list 0 1 9) (list 1 1 9) (list 2 0 19) (list 2 1 30) (list 2 2 33) (list 3 0 2) (list 4 0 28) (list 5 0 12) (list 7 0 25) (list 7 1 30) (list 7 2 33) (list 8 4 14) (list 10 0 12) (list 10 1 9) (list 11 0 12) (list 11 1 9) (list 13 0 12) (list 13 1 9) (list 14 0 6) (list 15 0 12) (list 15 1 9) (list 16 0 12) (list 16 1 9) (list 17 0 12) (list 17 1 9) (list 18 0 12) (list 18 1 9) (list 19 0 0) (list 19 1 11) (list 19 2 10) (list 19 3 13) (list 19 4 16) (list 19 5 26) (list 19 6 15) (list 19 7 17) (list 19 8 18) (list 20 0 3) (list 20 1 21) (list 21 1 34) (list 23 0 22) (list 24 0 5) (list 25 1 1) (list 25 2 27) (list 26 0 12) (list 26 1 9) (list 27 1 12) (list 28 0 9) (list 29 0 25) (list 30 0 8) (list 31 0 29) (list 32 0 7) (list 33 2 30) (list 34 0 35)) t)