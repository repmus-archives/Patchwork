(in-package :pw)(make-win 'c-pw-window "frullato1" 6225963 20578785 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 2097524 (list "construction du frul") 2097263) (sbox 'c-clock-constant 'ev-once "ev-once" nil 9240806 (list 0)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 65537 (list "nombre de notes") 1966152) (sbox 'c-patch 'g+ "g+" nil 3277068 (list 6000 0)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 262398 (list "note de base") 2097237) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 15663342 (list 6000 8 75 100 0 1) nil (list nil nil)) (sbox 'c-pw-functional 'create-list "create-list" nil 7995766 (list 3 0)) (sbox 'c-enum-collect-source 'enum "enum" nil 590009 (list "(1 2)")) (sbox 'c-patch 'g* "g*" nil 8126529 (list 0 100)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 2752576 (list "bornes MIDI") 1900642) (sbox 'c-pw-resize-x 'flat "flat" nil 12452042 (list "(1 2)") 2228270) (sbox 'c-patch 'g-random "g-random" nil 4784503 (list 6 9)) (sbox 'c-patch 'g-random "g-random" nil 5242947 (list 67 73)) (abst 'c-abstract-m 'user-abstraction::temps480 "temps" nil 11534624 (list "(1 2)" 4 "25") '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::dur1 epw::nilnum (:view-size 917540 :value 8 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil)) (common-lisp-user::dur2 list (:view-size 917540 :doc-string "lst" :value 16 :dialog-item-text "(1 2)" :type-list nil))) 'nil (make-win 'c-pw-window "temps" 31981745 22937932 (list (sbox 'c-patch 'g- "g-" nil 5701761 (list 0 1)) (sbox 'c-abstract-in 'absin "absin" nil 393220 (list "list" 1)) (sbox 'c-abstract-out 'absout "absout" nil 19923167 (list "temps")) (sbox 'c-enum-collect-source 'enum "enum" nil 1572961 (list "(1 2)")) (sbox 'c-abstract-in 'absin "absin" nil 10879209 (list "dur2" 3)) (sbox 'c-pw-resize-x 'length "length" nil 2818200 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'x-append "x-append" nil 12189823 (list "(1 2)" "16")) (sbox 'c-pw-resize-x 'flat "flat" nil 18415733 (list "(1 2)") 2228270) (sbox 'c-abstract-in 'absin "absin" nil 6553841 (list "dur1" 2)) (sbox 'c-map-first 'pwmap "pwmap" nil 15532126 (list "foo" "(1 2)")) (sbox 'c-pw-functional 'create-list "create-list" nil 8913028 (list 10 8))) (list (list 0 0 5) (list 2 0 7) (list 3 0 1) (list 5 0 3) (list 6 0 10) (list 6 1 4) (list 7 0 9) (list 9 0 3) (list 9 1 6) (list 10 0 0) (list 10 1 8)) nil)) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 10682389 (list 10 0)) (sbox 'c-map-first 'pwmap "pwmap" nil 6553806 (list "foo" "(1 2)")) (sbox 'c-pw-resize-x 'numbox "numbox" nil 2686983 (list 9) 2228270)) (list (list 1 0 15) (list 3 0 7) (list 3 1 6) (list 5 0 10) (list 5 1 13) (list 6 0 11) (list 7 0 14) (list 8 0 12) (list 10 0 1) (list 13 0 1) (list 14 0 16) (list 14 1 8) (list 15 0 7) (list 15 1 3)) t)