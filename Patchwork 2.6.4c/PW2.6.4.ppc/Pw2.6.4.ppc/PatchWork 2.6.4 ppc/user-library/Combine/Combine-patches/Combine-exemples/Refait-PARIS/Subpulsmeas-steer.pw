(in-package :pw)(make-win 'c-pw-window "Subpulsmeas-steer" 2883630 39453609 (list (sbox 'c-pw-resize-x 'nth-random "nth-random" nil 31916560 (list "( 3 4 5)") 2228294) (sbox 'c-patch 'posn-match "posn-match" nil 5046727 (list "(1 2)" 0)) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 12189711 (list 11 0)) (sbox 'c-pw-resize-x 'const "const" nil 26083355 (list "((5 8) (3 8) (4 8) (5 8))") 2228349) (sbox 'c-pw-resize-x 'flat "flat" nil 7668080 (list "(1 2)") 2228270) (sbox 'c-pw-resize-x 'const "const" nil 11927827 (list "((5 (2 2)) (3 (2 1 2)) (4 (3 (2 (3 3)))) (5 (1 (2 (2 3)) 1)))") 2228543) (sbox 'c-patch-polifrtm 'poly-rtm "poly-rtm" t 29229081 (list "nil" "nil" "nil" "nil") nil nil) (sbox 'c-patch 'dx->x "dx->x" nil 23200023 (list 0 "(1 2)")) (sbox 'c-pw-resize-x 'nth-random "nth-random" nil 22151568 (list "( 1)") 2228277) (sbox 'c-patch 'g-random "g-random" nil 3932192 (list 0 0)) (sbox 'c-pw-resize-x 'const "const" nil 3276944 (list "((5 (8 6 6)) (3 (6 7)) (4 (5 (3 (7 5)))) (5 (3 4 7)))") 2228524) (sbox 'c-patch-score-voice 'rtm "rtm" nil 22151191 (list "(5 8)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const" nil 589846 (list "((5 (2 2 1)) (3 (2 1)) (4 (3 (2 (3 3)))) (5 (1 1 1)))") 2228543) (sbox 'c-pw-resize-x 'const "const" nil 16515394 (list "((0 (1 2)) (3 (4  5)) (7 (8 (9 (10 11)))) (12 (13 (14 (15 16)) 17)))") 2228543) (sbox 'c-pw-resize-x 'nth-random "nth-random" nil 9437197 (list "( 2 3 4 5 6 7 8 9 )") 2228376) (sbox 'c-pw-resize-x 'const "const" nil 459113 (list "((0 (1 2 3)) (4 (5  6)) (7 (8 (9 (10 11)))) (12 (13 14 15)))") 2228631) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 6619177 (list 1 0)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 32833601 (list "Subpulsmeas-steer. Here three-voiced) gives equal length subdivs. of pulses selected via dx->x + nth-random.Pairs of voices are steered by parallel inputs and all are calculated simultaneously.") 5439693) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 14615174 (list 1 0)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 29425825 (list "(5 8)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'nth-random "nth-random" nil 20972039 (list "( 2 3 4 5 6 7 )") 2228376) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 25166227 (list 11 0)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 24641704 (list "(5 8)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-patch 'common-lisp-user::subd-puls-mes3 "subd-puls-mes3" nil 28115390 (list "nil" "(1 2)" 0 "(1 2)")) (sbox 'c-patch 'common-lisp-user::subd-puls-mes3 "subd-puls-mes3" nil 16777243 (list "nil" "(1 2)" 0 "(1 2)")) (sbox 'c-patch 'posn-match "posn-match" nil 12124901 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'g-abs "g-abs" nil 19464560 (list 0) 2228270) (sbox 'c-pw-resize-x 'rest "rest" nil 19923251 (list "(1 2)") 2228270) (sbox 'c-patch-score-voice 'rtm "rtm" nil 28049680 (list "(5 8)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-patch-score-voice 'rtm "rtm" nil 13959324 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'flat "flat" nil 14877424 (list "(1 2)") 2228270) (sbox 'c-patch 'g-random "g-random" nil 11928184 (list 0 0)) (sbox 'c-pw-resize-x 'rest "rest" nil 25756266 (list "(1 2)") 2228270) (sbox 'c-patch 'dx->x "dx->x" nil 36110732 (list 0 "(1 2)")) (sbox 'c-pw-resize-x 'const "const" nil 8716749 (list "((5 (8 6)) (3 (6 7 2)) (4 (5 (3 (7 5)))) (5 (3 (4 (2 4)) 7)))") 2228604) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 24052235 (list 11 0)) (sbox 'c-pw-resize-x 'g-abs "g-abs" nil 33227104 (list 0) 2228270) (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 32178579 (list 11 0))) (list (list 1 0 4) (list 1 1 15) (list 2 1 14) (list 4 0 16) (list 6 0 11) (list 6 1 29) (list 6 2 19) (list 6 3 28) (list 7 1 26) (list 9 0 12) (list 9 1 10) (list 11 0 3) (list 11 1 24) (list 16 1 9) (list 18 1 31) (list 19 0 3) (list 19 1 23) (list 21 1 8) (list 22 0 3) (list 22 1 1) (list 23 0 22) (list 23 1 35) (list 23 3 32) (list 24 0 22) (list 24 1 2) (list 24 3 27) (list 25 0 30) (list 25 1 13) (list 26 0 21) (list 27 0 7) (list 28 0 3) (list 28 1 23) (list 29 0 3) (list 29 1 24) (list 30 0 18) (list 31 0 5) (list 31 1 34) (list 32 0 33) (list 33 1 36) (list 35 1 20) (list 36 0 37) (list 37 1 0)) t)