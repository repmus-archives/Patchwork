(in-package :pw)(add-patch-box *active-patch-window* (abst 'c-abstract-m 'user-abstraction::no-0247 "no-0" t 16449788 (list 0 0 0) '((common-lisp-user::low epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::high epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::l-nth epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "no-0" 15073805 35717766 (list (sbox 'c-abstract-in 'absin "absin" nil 1769626 (list "high" 2)) (sbox 'c-patch 'g-random "g-random" nil 4456490 (list 0 0)) (sbox 'c-abstract-out 'absout "absout" t 19988556 (list "no-0")) (abst 'c-abstract-m 'user-abstraction::w-zero "w-zero" nil 14417976 (list "(1 2)") '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list)))) 'nil (make-win 'c-pw-window "W-Zero" 8913484 8847510 (list (sbox 'c-abstract-in 'absin "absin" t 0 (list "list" 1)) (sbox 'c-pw-functional 'mapcar "mapcar" t 5242887 (list "1+" "(1 2)")) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" t 2686983 (list "(f(x)=(if (= 0 x) -1 x))") 2228303) (sbox 'c-abstract-out 'absout "absout" nil 6619240 (list "W-Zero"))) (list (list 1 0 2) (list 1 1 0) (list 3 0 1)) nil)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 7667753 '(0) 2228270) (sbox 'c-abstract-in 'absin "absin" t 15597723 (list "l-nth" 3)) (sbox 'c-abstract-in 'absin "absin" nil 2 (list "low" 1)) (sbox 'c-pw-resize-x 'flat "flat" nil 11665459 (list "(1 2)") 2228270) (sbox 'c-patch 'posn-match "posn-match" t 17301568 (list "(1 2)" 0))) (list (list 1 0 6) (list 1 1 0) (list 2 0 8) (list 3 0 7) (list 4 0 1) (list 7 0 4) (list 8 0 3) (list 8 1 5)) nil)))