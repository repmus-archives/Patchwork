(in-package :pw)(add-patch-box *active-patch-window* (abst 'c-abstract-m 'user-abstraction::ser-accords455 "ser-accords" nil 24117426 (list "(1 2)" "(1 2)" 10) '((common-lisp-user::l-ints list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::l-rat list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::n-notes nilnum (:view-size 917540 :value 10 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "ser-accords" 12386423 24773062 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6029574 (list "<l-int> est une liste d'intervalles qui formeront les bases des accords, <l-ratios> est une liste de ratios appliqués à chaque intervalle de <l-int>, <n-notes> est le nombre de notes des accords") 10748062) (sbox 'c-abstract-out 'absout "absout" nil 15859924 (list "ser-accords")) (sbox 'c-abstract-in 'absin "absin" t 16 (list "l-ints" 1)) (sbox 'c-map-first 'pwmap "pwmap" t 12124259 (list "foo" "(1 2)" "foo")) (sbox 'c-enum-collect-source 'enum "enum" t 3342547 (list "(1 2)")) (sbox 'c-enum-collect-source 'enum "enum" t 3014706 (list "(1 2)")) (abst 'c-abstract-m 'user-abstraction::ser-ratio332 "ser-ratio" t 8519838 (list "(1 2)" 4 10) '((common-lisp-user::i-base list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (ratio nilnum (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil)) (common-lisp-user::n nilnum (:view-size 917540 :value 5 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "ser-ratio" 5964026 26476861 (list (sbox 'c-pw-resize-x 'x->dx "x->dx" nil 5505143 (list "(1 2)") 2228270) (sbox 'c-abstract-in 'absin "absin" nil 2490443 (list "i-base" 1)) (sbox 'c-abstract-out 'absout "absout" nil 21430358 (list "ser-ratio")) (sbox 'c-abstract-in 'absin "absin" nil 8192206 (list "ratio" 2)) (sbox 'c-abstract-in 'absin "absin" nil 8323097 (list "n" 3)) (sbox 'c-pw-resize-x 'first "first" nil 13697037 (list "(1 2)") 2228270) (sbox 'c-patch 'dx->x "dx->x" nil 17563720 (list 0 "(1 2)")) (sbox 'c-patch 'ratio "ratio" nil 11468934 (list "0" "0" "5"))) (list (list 0 0 1) (list 2 0 6) (list 5 0 1) (list 6 0 5) (list 6 1 7) (list 7 0 0) (list 7 1 3) (list 7 2 4)) nil)) (sbox 'c-abstract-in 'absin "absin" t 8585216 (list "n-notes" 3)) (sbox 'c-abstract-in 'absin "absin" t 262345 (list "l-rat" 2))) (list (list 1 0 3) (list 3 0 5) (list 3 1 6) (list 3 2 4) (list 4 0 8) (list 5 0 2) (list 6 0 5) (list 6 1 4) (list 6 2 7)) nil)))