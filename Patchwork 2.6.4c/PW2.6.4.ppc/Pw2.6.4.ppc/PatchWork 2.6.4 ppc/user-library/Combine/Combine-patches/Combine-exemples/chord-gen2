(in-package :pw)(make-win 'c-pw-window "chord-gen2" 2752676 29229483 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 11600189 (list "L'abstraction <ord-puls> construit un arbre des temps pour un ensemble de subdivisions des mesures <subd> et un ensemble de pulsations  <puls> par mesure") 11731046) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 458750 (list "L'abstraction <spectre> est analogue au Patch \"Chord-gen1\"") 2883747) (abst 'c-abstract-m 'user-abstraction::spectre456 "spectre" nil 4521995 (list 8) '((common-lisp-user::approx epw::approx (:view-size 917540 :value 2 :min-val 1 :max-val 16 :doc-string "approx" :type-list (fixnum)))) 'nil (make-win 'c-pw-window "spectre" 3604591 34800272 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 28311554 (list "Voir patches 'chord-gen' 0 et 1") 2883803) (sbox 'c-pw-resize-x 'const "const" nil 3145784 (list "(13/16 13/16 13/16 11/15 11/15 12/15 13/15 13/15 7/8 7/8 7/8 7/8)") 2228638) (sbox 'c-abstract-out 'absout "absout" nil 31195467 (list "spectre")) (sbox 'c-patch-chord-box-m 'chord "chord" nil 16842872 (list (note (list 3600 100 0 0 nil 1 100 nil) (list 3700 100 0 1 nil 1 100 nil) (list 3800 100 0 2 nil 1 100 nil) (list 3900 100 0 3 nil 1 100 nil) (list 4000 100 0 4 nil 1 100 nil) (list 4100 100 0 5 nil 1 100 nil) (list 4200 100 0 6 nil 1 100 nil) (list 4300 100 0 7 nil 1 100 nil) (list 4400 100 0 8 nil 1 100 nil) (list 4500 100 0 9 nil 1 100 nil) (list 4600 100 0 10 nil 1 100 nil) (list 4700 100 0 11 nil 1 100 nil) (list 4800 100 0 12 nil 1 100 nil))) nil :midic) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19399091 (list "calcul d'une série d'accords en fonction d'une liste d'intervalles de base (voir à gauche) et de ratios (voir en haut)!!!") 5046447) (sbox 'c-pw-functional 'list "list" nil 18546886 (list 0 0)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 6946937 (list (note (list 4700 100 0 0 nil 1 100 nil) (list 4750 100 0 1 nil 1 100 nil) (list 4800 100 0 2 nil 1 100 nil) (list 4850 100 0 3 nil 1 100 nil) (list 4900 100 0 4 nil 1 100 nil) (list 4950 100 0 5 nil 1 100 nil) (list 5000 100 0 6 nil 1 100 nil) (list 5050 100 0 7 nil 1 100 nil) (list 5100 100 0 8 nil 1 100 nil) (list 5150 100 0 9 nil 1 100 nil) (list 5200 100 0 10 nil 1 100 nil) (list 5250 100 0 11 nil 1 100 nil))) nil :midic) (abst 'c-abstract-m 'user-abstraction::ser-accords455 "ser-accords" nil 22806828 (list "(1 2)" "(1 2)" 10) '((common-lisp-user::l-ints list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::l-rat list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::n-notes nilnum (:view-size 917540 :value 10 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "ser-accords" 12386423 24773062 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6029574 (list "<l-int> est une liste d'intervalles qui formeront les bases des accords, <l-ratios> est une liste de ratios appliqués à chaque intervalle de <l-int>, <n-notes> est le nombre de notes des accords") 10748062) (sbox 'c-abstract-out 'absout "absout" nil 15859924 (list "ser-accords")) (sbox 'c-abstract-in 'absin "absin" t 16 (list "l-ints" 1)) (sbox 'c-map-first 'pwmap "pwmap" t 12124259 (list "foo" "(1 2)" "foo")) (sbox 'c-enum-collect-source 'enum "enum" t 3342547 (list "(1 2)")) (sbox 'c-enum-collect-source 'enum "enum" t 3014706 (list "(1 2)")) (abst 'c-abstract-m 'user-abstraction::ser-ratio332 "ser-ratio" t 8519838 (list "(1 2)" 4 10) '((common-lisp-user::i-base list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (ratio nilnum (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil)) (common-lisp-user::n nilnum (:view-size 917540 :value 5 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "ser-ratio" 5964026 26476861 (list (sbox 'c-pw-resize-x 'x->dx "x->dx" nil 5505143 (list "(1 2)") 2228270) (sbox 'c-abstract-in 'absin "absin" nil 2490443 (list "i-base" 1)) (sbox 'c-abstract-out 'absout "absout" nil 21430358 (list "ser-ratio")) (sbox 'c-abstract-in 'absin "absin" nil 8192206 (list "ratio" 2)) (sbox 'c-abstract-in 'absin "absin" nil 8323097 (list "n" 3)) (sbox 'c-pw-resize-x 'first "first" nil 13697037 (list "(1 2)") 2228270) (sbox 'c-patch 'dx->x "dx->x" nil 17563720 (list 0 "(1 2)")) (sbox 'c-patch 'ratio "ratio" nil 11468934 (list "0" "0" "5"))) (list (list 0 0 1) (list 2 0 6) (list 5 0 1) (list 6 0 5) (list 6 1 7) (list 7 0 0) (list 7 1 3) (list 7 2 4)) nil)) (sbox 'c-abstract-in 'absin "absin" t 8585216 (list "n-notes" 3)) (sbox 'c-abstract-in 'absin "absin" t 262345 (list "l-rat" 2))) (list (list 1 0 3) (list 3 0 5) (list 3 1 6) (list 3 2 4) (list 4 0 8) (list 5 0 2) (list 6 0 5) (list 6 1 4) (list 6 2 7)) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 9633962 (list "ratios->") 2359388) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 14417925 (list "calcul des intervalles de base->") 2818141) (sbox 'c-pw-functional 'approx-m "approx-m" nil 27853105 (list 6000 2)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 21430503 (list "((1 2))") 2228270) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 22020113 (list 3600 100 4800)) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 9830412 (list 4700 50 5250)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7077890 (list "série supérieure") 2097261) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19333118 (list "série inférieure") 2097261) (sbox 'c-abstract-in 'absin "absin" nil 25100687 (list "approx" 1)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 27263395 (list "Le paramètre 'n' gère le nombre de notes dans l'accord généré!!!!!") 2949314)) (list (list 2 0 10) (list 3 0 12) (list 5 0 3) (list 5 1 6) (list 6 0 13) (list 7 0 11) (list 7 1 1) (list 10 0 7) (list 10 1 16) (list 11 0 5)) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1442037 (list "liste de base") 1900671) (sbox 'c-pw-resize-x 'reverse "reverse" nil 10223870 (list "(1 2)") 2228270) (sbox 'c-pw-resize-x 'const "const" nil 3735763 (list "(5 4 3 6 2 2 6 3 4 5 4 3)") 2228400) (sbox 'c-patch-score-voice 'rtm "rtm" nil 24117369 (list "(4 8)" "((4(2 2)))" "(6000)" 60 "nil") nil nil) (sbox 'c-pw-resize-x 'const "const" nil 7209176 (list "(1 2)") 2228270) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 13762577 (list "Mise en phase des accords et des pulsations par mesure, pour avoir \"un\" accord par mesure") 7405656) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 23592979 '(0) 2228270) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 4456507 (list "<<-génération des accords de base") 2949215) (abst 'c-abstract-m 'user-abstraction::phase-acc/puls "phase-acc/puls" nil 10289163 (list "(1 2)" "(1 2)") '((common-lisp-user::accs list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::puls list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list)))) 'nil (make-win 'c-pw-window "phase-acc/puls" 7471304 23789790 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 5439622 (list "Mise en phase des accords et des pulsations par mesure, pour avoir \"un\" accord par mesure") 7405656) (sbox 'c-enum-collect-source 'enum "enum" nil 7405634 (list "(1 2)")) (sbox 'c-abstract-in 'absin "absin" nil 655459 (list "puls" 2)) (sbox 'c-pw-resize-x 'flat-once "flat-once" nil 17694744 (list "(1 2)") 2228270) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 15073388 (list "<accs> liste d'accords, <puls> nombre de pulsations par mesure!!") 7536730) (sbox 'c-pw-functional 'create-list "create-list" nil 10354731 (list 10 0)) (sbox 'c-map-first 'pwmap "pwmap" nil 13893649 (list "foo" "(1 2)" "foo")) (sbox 'c-abstract-in 'absin "absin" nil 655368 (list "accs" 1)) (sbox 'c-enum-collect-source 'enum "enum" nil 3407880 (list "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 20774935 (list "phase-acc/puls"))) (list (list 1 0 2) (list 3 0 6) (list 5 0 1) (list 5 1 8) (list 6 0 8) (list 6 1 5) (list 6 2 1) (list 8 0 7) (list 9 0 3)) nil)) (sbox 'c-pw-functional 'g-oper "g-oper" nil 13041784 (list "list" "0" "8")) (abst 'c-abstract-m 'user-abstraction::ord-puls294296 "ord-puls" t 19857636 (list "0" "nil") '((common-lisp-user::subd list (:view-size 917540 :doc-string "lst" :value 0 :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::puls list (:view-size 917540 :doc-string "lst" :value 'nil :dialog-item-text "(1 2)" :type-list nil))) 'nil (make-win 'c-pw-window "ord-puls" 6160550 22872278 (list (sbox 'c-map-first 'pwmap "pwmap" nil 10878986 (list "foo" "(1 2)")) (sbox 'c-abstract-in 'absin "absin" nil 393225 (list "puls" 2)) (sbox 'c-abstract-in 'absin "absin" nil 13369434 (list "subd" 1)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1966189 (list "cette abstraction construit une série de mesures avec   des subdivisions <subd> par mesure et <puls> pulsations par mesure!! ") 9896039) (sbox 'c-pw-functional 'create-list "create-list" nil 6553619 (list 10 1)) (sbox 'c-enum-collect-source 'enum "enum" nil 3407885 (list "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 19988533 (list "ord-puls")) (sbox 'c-pw-functional 'mapcar "mapcar" nil 15794195 (list "list" "(1 2)" "(1 2)"))) (list (list 0 0 5) (list 0 1 4) (list 4 0 5) (list 5 0 1) (list 6 0 7) (list 7 1 2) (list 7 2 0)) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 16973943 (list "génération de mesures à partir de la liste de base") 3801190)) (list (list 4 0 7) (list 6 0 12) (list 6 1 13) (list 6 2 9) (list 7 0 5) (list 9 0 11) (list 11 0 2) (list 11 1 4) (list 12 1 7) (list 13 0 7) (list 13 1 4)) t)