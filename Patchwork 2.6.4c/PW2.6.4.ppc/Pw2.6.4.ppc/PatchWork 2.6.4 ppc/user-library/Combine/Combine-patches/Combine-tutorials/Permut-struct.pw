(in-package :pw)(make-win 'c-pw-window "Permut-struct" 2687001 19137095 (list (sbox 'c-pw-functional 'permut-circ "permut-circ" t 12320801 (list "(1 2)" 1)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 7274660 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const" nil 5832748 (list "((3 8) (1 8) (4 8) (1 8) (5 8) (9 8))") 2228330) (sbox 'c-pw-resize-x 'numbox "numbox" t 9306164 (list 1) 2228308) (sbox 'c-pw-resize-x 'const "const" nil 5767421 (list "((3 ((1 (-1 2)) 1)) (1 (1 1 1 1 -1 1)) (4 (1 (1 (1 2 1)) 1 1 1)) (1 (1 1 1)) (5 ((1 (1 -1 1)) 1 1 1 1))         (9 (-1 (1 (2 1 2)) 1 1)))") 2228360) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 34 (list "permut-struct objet circ[function]permutation circulaire des mesures d'une séquence<objet> est la sortie d'un module `RTM<circ> est un argument  indiquant de combien de pas est la permutation circulaire") 5112205) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 8913150 (list "ATTENTION!! Il est important de mettre en phase les mesures de la structure à transformer en reprenant le même processus pour la deuxième RTM ou soit en reprenant la liste de mesures avec un module <rtm-dim> et appliquant la même permutation aux mesures") 5832999) (sbox 'c-patch-score-voice 'rtm "rtm" nil 15204492 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-functional 'common-lisp-user::permut-struct "permut-struct" nil 12517536 (list "nil" 1))) (list (list 0 0 2) (list 0 1 3) (list 1 0 2) (list 1 1 4) (list 7 0 0) (list 7 1 8) (list 8 0 1) (list 8 1 3)) t)