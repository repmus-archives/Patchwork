(in-package :pw)(make-win 'c-pw-window "append-mes" 2555911 30474872 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6750576 (list "ATTENTION! à chaque extension le module <append-mes> ouvre deux fenêtres: une pour l'objet rtm et l'autre pour l'index, ou la liste d'index") 3539189) (sbox 'c-pw-duplo 'append-mes "append-mes" nil 22347908 (list 0 1 0 0)) (sbox 'c-pw-resize-x 'const "const" nil 7340226 (list "((5 (1 -1)) (4 (1 1 (1 (1 1 1 1 -1)))) (6 (1 1 1 (1 (1 1 1 1)) 1 1)) (3 (-1 1 1 1))       (2 (1 1 (1 (1 1 1 1 1 1)) 1 (1 (1 1)))))") 2228392) (sbox 'c-pw-duplo 'append-mes "append-mes" nil 13566140 (list 0 0)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 10158145 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const" nil 7340038 (list "((5 8) (4 8) (6 8) (3 8) (2 8))") 2228392) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -196570 (list "                           append-mes construction d'une séquence rythmique à partir de mesures empruntées à d'autres rtms.L'entrée <rtm> accepte la sortie d'une <rtm><nth> accepte soit un nombre (l'index de la mesure choisie)soit une liste avec les index des mesures choisies. La sortie est un objet \"measures\" qui doit se connecter à l'entrée <objs> d'un module <rtm>") 6357451) (sbox 'c-patch-score-voice 'rtm "rtm" t 22675830 (list "(2 4)" "((2 (1 1 1 1)))" "(6000)" 60 "nil") nil nil) (sbox 'c-patch-score-voice 'rtm "rtm" nil 11600246 (list "(2 4)" "((2 (1 1 1 1)))" "(6000)" 60 "nil") nil nil) (sbox 'c-pw-resize-x 'const "const" nil 10748153 (list "( 3 2 0 4 1 )") 2228338) (sbox 'c-pw-resize-x 'const "const" nil 20774928 (list "((3 8) (1 8) (4 8) (1 8) (5 8) (9 8))") 2228301) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 16449724 (list "Il est possible aussi de combiner plusieurs séquences issues d'autres rtm's") 2097411) (sbox 'c-pw-resize-x 'const "const" nil 23068896 (list "(5 3 1 0)") 2228338) (sbox 'c-pw-resize-x 'const "const" nil 23396382 (list "((3 ((1 (1 2)) 1)) (1 (1 1 1 1 1 1)) (4 (1 (1 (1 2 1)) 1 1 1)) (1 (1 1 1)) (5 ((1 (1 -1 1)) 1 1 1 1))         (9 (1 (1 (2 1 2)) 1 1)))") 2228302) (sbox 'c-patch-score-voice 'rtm "rtm" nil 25952275 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const" nil 19398853 (list "( 3 2 0 4 1 )") 2228338)) (list (list 1 0 4) (list 1 1 15) (list 1 2 14) (list 1 3 12) (list 3 0 4) (list 3 1 9) (list 4 0 5) (list 4 1 2) (list 7 4 1) (list 8 4 3) (list 14 0 10) (list 14 1 13)) t)