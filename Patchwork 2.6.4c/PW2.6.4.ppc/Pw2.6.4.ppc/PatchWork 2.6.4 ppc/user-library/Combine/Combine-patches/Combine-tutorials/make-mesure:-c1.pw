(in-package :pw)(make-win 'c-pw-window "make-mesure/-c1" 4194315 33555417 (list (sbox 'c-pw-resize-x 'const "const1" nil 18612805 (list "((0 ((0 (0 (1 (0)) 0)) 0 (0 (0 0 (1 (0)) )))))") 2228539) (sbox 'c-pw-resize-x 'const "const" nil 720920 (list "((3 ((2 (1 (0 (1)) 2)) 4 (2 (0 2 (2 (3)) ))))(2 ((2 (1 (0 (3)) 2)) 4 (2 (0 2 (2 (2)) )))))") 2228783) (sbox 'c-patch-score-voice 'rtm "rtm" nil 10813568 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-patch 'common-lisp-user::l-make-mesure-c "l-make-mesure-c" nil 6750337 (list "(1 2)" "(1 2)" "(1 2)" "(1 2)")) (sbox 'c-pw-resize-x 'const "const" nil 5439502 (list "(2 3 4 )") 2228309) (sbox 'c-pw-resize-x 'const "const" nil 6619362 (list "((1 -1 1) (1 1 1 1) (-1 2) (2 1 -1))") 2228470) (sbox 'c-pw-resize-x 'const "const" nil 3276985 (list "(13 11 7 5 3)") 2228388) (sbox 'c-pw-resize-x 'const "const" nil 4522638 (list "(3 1 2)") 2228388) (sbox 'c-pw-resize-x 'const "const" nil 7865015 (list "((1))") 2228470) (sbox 'c-pw-resize-x 'const "const" nil 6685155 (list "(1)") 2228309) (sbox 'c-patch 'common-lisp-user::l-make-mesure-c "l-make-mesure-c" nil 7995990 (list "(1 2)" "(1 2)" "(1 2)" "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 9306339 (list "\"liste= mesure la structure de la mesure devra avoir la syntaxe suivante:(mesure (proportion1 proportion2 (proportion3 (sous-prop31 sous-prop32 (sous-prop31 (pattern))))))Les indices comme <mesure>, <proportion3> et <sous-prop31> qu'indiquent en combien de pulsationsse subdivisera une liste de proportions, ou un pattern, seront pris de la librairie PRINCIP.Les proportions secondaires de la librairie SECONDAIRES.Pour indiquer qu'on veut un pattern il faut indiquer-la proportion du pattern (librairie PRINCIP)-et le pattern comme une liste d'un élément ->> (2 (0)) (2 (0))  indique le pattern d'indice zéro dans l'espace de deux pulsations!!!\"") 13369673) (sbox 'c-patch-score-voice 'rtm "rtm" t 12059221 (list "(3 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const1" nil 1376859 (list "((0 ((2 (0 (1 (0)) 0)) 0 (2 (0 0 (1 (0)) )))))") 2228539)) (list (list 2 1 3) (list 3 0 1) (list 3 1 6) (list 3 2 4) (list 3 3 5) (list 10 0 0) (list 10 1 7) (list 10 2 9) (list 10 3 8) (list 12 1 10)) t)