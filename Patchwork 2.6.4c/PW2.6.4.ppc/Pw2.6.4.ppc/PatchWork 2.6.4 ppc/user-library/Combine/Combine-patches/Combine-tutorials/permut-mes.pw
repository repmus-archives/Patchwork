(in-package :pw)(make-win 'c-pw-window "permut-mes" 2687016 23528006 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" t 11534565 (list "ATTENTION!! Il est important de mettre en phase les mesures de la structure à transformer. Soit en reprenant le même processus pour la deuxième RTM, soit en reprenant la liste de mesures avec un module <rtm-dim>") 4587830) (sbox 'c-patch-score-voice 'rtm "rtm" nil 18481267 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -131051 (list "permut-mes permutation circulaire du premier niveaux de pulses d'une mesure.<objet> est la sortie d'un module `RTM<circ> est un argument indiquant de combien de pas est la permutation circulaire       il peut être soit un nombre soit une liste (une permutation différente pour chaque mesure") 6422965) (sbox 'c-patch-score-voice 'rtm "rtm" nil 11534467 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-resize-x 'const "const" nil 8257570 (list "((3 8) (1 8) (4 8) (1 8) (5 8) (9 8))") 2228330) (sbox 'c-pw-resize-x 'const "const" nil 8847574 (list "((3 ((1 (-1 2)) 1)) (1 (1 1 1 1 -1 1)) (4 (1 (1 (1 2 1)) 1 1 1)) (1 (1 1 1)) (5 ((1 (1 -1 1)) 1 1 1 1))         (9 (-1 (1 (2 1 2)) 1 1)))") 2228360) (sbox 'c-pw-functional 'common-lisp-user::permut-mes "permut-mes" nil 15663244 (list "nil" 2)) (sbox 'c-patch 'rtm-dim "rtm-dim" nil 17170447 (list "nil" 2))) (list (list 1 0 4) (list 1 1 6) (list 3 0 4) (list 3 1 5) (list 6 0 3) (list 7 0 3)) t)