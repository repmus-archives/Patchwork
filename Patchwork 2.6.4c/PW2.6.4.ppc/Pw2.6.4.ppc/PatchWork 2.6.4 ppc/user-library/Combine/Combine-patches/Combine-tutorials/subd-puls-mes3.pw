(in-package :pw)(make-win 'c-pw-window "subd-puls-mes3" 2490403 40305109 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 75 (list "subd-puls-mes3 objet subdivisions lecture places[function]subdivision des pulses d'une liste de <mesures> par une de <subdivisions> et de <places>.   L'argument <lecture> determine le mode de lecture de la liste de mesures soit linèairement,   soit circulairement!!!!!   <objet> est la sortie d'une boite <rtm>!!!!!") 6816056) (sbox 'c-pw-resize-x 'const "const" nil 32375009 (list "(5 9 12 18 20 22 28 31 35 40)") 2228411) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 25952489 (list "L'entrée <places> indique à quelles impulsions seront appliquées les subdivisions. ATTENTION: la première place est indiquée par '1' un.") 6095000) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19267583 (list "L'entrée <objet> de <subd-puls-mes3> reçoit la sortie d'un module RTM") 5242983) (sbox 'c-patch 'common-lisp-user::subd-puls-mes3 "subd-puls-mes3" nil 7340292 (list "nil" "(1 2)" 0 "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 11993342 (list "L'entrée <subdivisions> permet d'entrer une liste de subdivisions à appliquer à certaines impulsions. Au cas où la valeur soit négative, elle représentera une pause proportionnelle.") 10485895) (sbox 'c-pw-resize-x 'const "const" nil 23396579 (list "(5 4 -3 6 2 2 6 3 4 5 )") 2228387) (abst 'c-abstract-m 'user-abstraction::ord-puls294296 "ord-puls" nil 16056467 (list "0" "nil") '((common-lisp-user::subd list (:view-size 917540 :doc-string "lst" :value 0 :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::puls list (:view-size 917540 :doc-string "lst" :value 'nil :dialog-item-text "(1 2)" :type-list nil))) 'nil (make-win 'c-pw-window "ord-puls" 6160550 23396738 (list (sbox 'c-abstract-out 'absout "absout" nil 20185295 (list "ord-puls")) (sbox 'c-abstract-in 'absin "absin" nil 3014676 (list "puls" 2)) (sbox 'c-abstract-in 'absin "absin" nil 2228382 (list "subd" 1)) (sbox 'c-map-first 'pwmap "pwmap" nil 12910613 (list "foo" "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6029529 (list "cette abstraction construit une série de mesures avec   des subdivisions <subd> par mesure et <puls> pulsations par mesure!! ") 8061074) (sbox 'c-enum-collect-source 'enum "enum" nil 6684703 (list "(1 2)")) (sbox 'c-pw-functional 'create-list "create-list" t 9764943 (list 10 1)) (sbox 'c-pw-functional 'mapcar "mapcar" nil 15794290 (list "list" "(1 2)" "(1 2)"))) (list (list 0 0 7) (list 3 0 5) (list 3 1 6) (list 5 0 1) (list 6 0 5) (list 7 1 2) (list 7 2 3)) nil)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 19202183 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil nil) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 35586246 (list "La sortie de <subd-puls-mes3> se connecte à l'entrée <beats>  d'un module RTM") 3014833) (sbox 'c-patch-score-voice 'rtm "rtm" t 35913833 (list "(4 4)" "((4(2 2)))" "(6000)" 60) nil nil) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 24576001 (list "L'entrée <lecture> permet de choisir le type de lecture à réaliser sur la séquence: linéaire ou circulaire!!") 8585310) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6619136 (list "***************************************   Le module <subd-puls-mes3> permet la manipulation de structures rythmiques.") 3473658) (sbox 'c-pw-resize-x 'const "const" nil 10616833 (list "(5 4 6 3 2 )") 2228323) (sbox 'c-pw-resize-x 'reverse "reverse" nil 12320945 (list "(1 2)") 2228270) (sbox 'c-patch 'common-lisp-user::subd-puls-mes3 "subd-puls-mes3" nil 28639352 (list "nil" "(1 2)" 0 "(1 2)")) (sbox 'c-pw-functional 'g-oper "g-oper" nil 15007756 (list "list" "0" "8"))) (list (list 7 0 13) (list 7 1 14) (list 8 0 16) (list 8 1 7) (list 10 0 16) (list 10 1 15) (list 14 0 13) (list 15 0 8) (list 15 1 6) (list 15 3 1) (list 16 1 13)) t)