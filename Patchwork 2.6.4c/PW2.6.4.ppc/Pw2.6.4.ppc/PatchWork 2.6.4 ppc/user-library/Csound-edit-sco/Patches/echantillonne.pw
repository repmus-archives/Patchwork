(in-package :pw)(make-win 'c-pw-window "echantillonne" 3211409 16122049 (list (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 983055 (list 10 "100" "Untitled") 7077972 '(((0 6553700) nil :bpf) ((0 6553700)))) (abst 'c-abstract-m 'user-abstraction::echantillonne "echantillonne" t 9306165 (list 0 10 0 100 1 0) '((bpf c-patch-buffer::nilnum (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil)) (echan epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (xinit epw::fix/float (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (xend epw::fix/float (:view-size 917540 :value 100 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (xfact epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (ndec epw::fix (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float)))) 'nil (make-win 'c-pw-window "echantillonne" 12255391 28049853 (list (sbox 'c-abstract-in 'absin "absin" t 18940155 (list "ndec" 6)) (sbox 'c-patch 'g* "g*" t 20316294 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" t 1114261 (list "xinit" 3)) (sbox 'c-abstract-in 'absin "absin" t 361 (list "echan" 2)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" t 10027357 '(0) 2228270) (sbox 'c-patch 'arithm-ser "arithm-ser" t 10354748 (list 0 50 100)) (sbox 'c-abstract-in 'absin "absin" t 7536974 (list "bpf" 1)) (sbox 'c-abstract-in 'absin "absin" t 262144 (list "xend" 4)) (sbox 'c-patch 'g- "g-" t 4456704 (list 0 1)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" t 25428156 (list "echantilloneur/scaler-sum") 2228451) (sbox 'c-patch 'g- "g-" t 4587661 (list 0 1)) (sbox 'c-patch 'transfer "transfer" t 13435131 (list "nil" 0)) (sbox 'c-patch 'g/ "g/" t 7667918 (list 0 1)) (sbox 'c-enum-collect-source 'enum "enum" t 14155858 (list "(1 2)")) (sbox 'c-map-first 'pwmap "pwmap" t 17563783 (list "foo" "(1 2)")) (sbox 'c-pw-functional 'g-round "g-round" t 23068807 (list 0 0)) (sbox 'c-abstract-in 'absin "absin" t 16253173 (list "xfact" 5)) (sbox 'c-abstract-out 'absout "absout" nil 25821319 (list "echantillonne"))) (list (list 1 0 14) (list 1 1 16) (list 4 0 6) (list 5 0 2) (list 5 1 12) (list 5 2 7) (list 8 0 3) (list 10 0 7) (list 10 1 2) (list 11 0 4) (list 11 1 13) (list 12 0 10) (list 12 1 8) (list 13 0 5) (list 14 0 13) (list 14 1 11) (list 15 0 1) (list 15 1 0) (list 17 0 15)) nil))) (list (list 1 0 0)) t)