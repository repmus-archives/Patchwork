(in-package "CS-E")(defun printscoseq (seq dest)    (if (atom seq)(print-seq-aux seq dest)    (while seq      (print-seq-aux (pop seq) dest))))(defun print-seq-aux (seq dest)(format dest "~4,4f~a"(float seq) #\tab))        (t          (format dest "~D"seq))))(pw::defunp Edit-sco-obj  ((filename list ( :value  '() :type-list '(string)))                      (son list)  &rest (donnees numbers?)) nil"Cette boite rassemble les tables et notes pour les imprimer dans un fichier <file.sco>"  (when son    (setf donnees             (append (pw::flat-once donnees)(pw::flat-once (insts->sco son))))    (unless filename      (setf filename (CCL:choose-new-file-dialog :directory (directoryp *lastcsdfile*)                                                 :button-string "file"                                                  :prompt "Save csound")))    (when  filename      (setf *lastcsdfile* filename)      (format t "Žcriture du fichier ~a en cours" *lastcsdfile*)      (with-open-file  (fd filename                           :direction :output :if-exists :rename-and-delete                            :if-does-not-exist :create)        (dolist (elt donnees)          (format fd "~D" (pop elt))          (format fd "~D~a" (pop elt) #\tab)          (while elt             (format fd "~4,4f~a"(float (pop elt)) #\tab))          (format fd "~%"))        (format fd "e")" - - - - > c'est fait chef !"))      ))(load-once "edit-sco:add-to-csnd;6-snd-comp")(load-once "edit-sco:add-to-csnd;7-chds-auto")