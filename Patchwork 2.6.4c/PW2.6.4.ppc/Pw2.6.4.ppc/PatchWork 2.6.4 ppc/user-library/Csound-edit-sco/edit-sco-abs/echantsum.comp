(in-package :pw)(progn (setf (fdefinition 'user-comp-abstr::|echantsum|) (eval (list 'function (list 'lambda '(bpf0 echant1 xinit2 xend3 summax4 nbdec5) (list 'g-round (list 'g-scaling/sum (list 'let '(|#:\|*enum-value*275\||) (list 'mapcar (list 'function (list 'lambda '(|#:\|*local-val*276\||) '(setf |#:\|*enum-value*275\|| |#:\|*local-val*276\||) (list 'transfer 'bpf0 '|#:\|*enum-value*275\||))) (list 'arithm-ser 'xinit2 (list 'g/ (list 'g- 'xend3 'xinit2) (list 'g- 'echant1 ''1)) 'xend3))) 'summax4) 'nbdec5))))) (setf (get 'user-comp-abstr::|echantsum| '*type-intypes*) '((&required (bpf0 list (:view-size 917540 :doc-string "lst" :value 'nil :dialog-item-text "(1 2)" :type-list (bpf list))) (echant1 epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (xinit2 epw::fix/float (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (xend3 epw::fix/float (:view-size 917540 :value 100 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (summax4 epw::midics? (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list))) (nbdec5 epw::fix (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float)))) (&optional) (&rest))) (setf (get 'user-comp-abstr::|echantsum| '*type-outtype*) 'nil) (let ((box (make-pw-standard-box 'c-patch 'user-comp-abstr::|echantsum|))) (set-view-position box 15 15) (add-patch-box *active-patch-window* box)))