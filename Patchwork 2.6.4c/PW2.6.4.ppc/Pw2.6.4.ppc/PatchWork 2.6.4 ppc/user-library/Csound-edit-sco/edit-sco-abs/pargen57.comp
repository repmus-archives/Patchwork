(in-package :pw)(progn (setf (fdefinition 'user-comp-abstr::|pargen57|) (eval (list 'function (list 'lambda '(common-lisp-user::bpf00 common-lisp-user::pnts1 common-lisp-user::y-max2 common-lisp-user::ndec3) (list 'cs-e:paramxy (list 'g-round (list 'g-scaling/max (list 'get-slot 'common-lisp-user::bpf00 ''common-lisp-user::x-points) 'common-lisp-user::pnts1) ''0) (list 'g-round (list 'g-scaling/max (list 'get-slot 'common-lisp-user::bpf00 ''common-lisp-user::y-points) 'common-lisp-user::y-max2) 'common-lisp-user::ndec3)))))) (setf (get 'user-comp-abstr::|pargen57| '*type-intypes*) '((&required (common-lisp-user::bpf00 object (:view-size 917540 :doc-string "obj" :value 'nil :dialog-item-text "()" :type-list nil)) (common-lisp-user::pnts1 epw::midics? (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list))) (common-lisp-user::y-max2 epw::midics? (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list))) (common-lisp-user::ndec3 epw::fix (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float)))) (&optional) (&rest))) (setf (get 'user-comp-abstr::|pargen57| '*type-outtype*) 'nil) (let ((box (make-pw-standard-box 'c-patch 'user-comp-abstr::|pargen57|))) (set-view-position box 15 15) (add-patch-box *active-patch-window* box)))