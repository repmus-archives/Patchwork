(in-package :pw)(make-win 'c-pw-window "bind-2points" 3080224 23396649 (list (sbox 'c-patch 'genutils::bind-2points "bind-2points" nil 8716401 (list "(100 100)" "(200 200)" 0.3 -0.3)) (sbox 'c-pw-resize-x 'first "first" nil 12582958 (list "(1 2)") 2228270) (make-instance 'c-pw-resize-x :view-position 12583130 :view-size 2228270 :active-mode nil :pw-function 'second :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "list" :type-list 'nil))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 589834 (list "As the other BIND modules BIND-2POINTS is working on points or xy-coordinates. like BIND-BEZIER it works is on both x and y, and it returns always a double list. One specifies a control point in a transition between p1 and p2, by giving xoff & yoff as RELATIVE values. The idea is to control departure/arrival around main points, and result could be passed on to smoothing function (like bspline) for pleasant curves.") 7733530) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 14221424 (list 10 "100" "Untitled") 7077972 '(((6553700 5570675 14090425 13107400) nil :bpf) ((6553700 5570675 14090425 13107400))))) (list (list 1 0 0) (list 2 0 0) (list 4 0 1) (list 4 1 2)) t)