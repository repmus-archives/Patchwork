(in-package :pw)(make-win 'c-pw-window "bind-bezier" 3014669 25166131 (list (sbox 'c-patch 'genutils::bind-bezier "bind-bezier" nil 7274520 (list "(100 100)" "(200 200)" 0.5 -0.5)) (sbox 'c-pw-resize-x 'first "first" nil 15401005 (list "(1 2)") 2228270) (make-instance 'c-pw-resize-x :view-position 15401156 :view-size 2228270 :active-mode nil :pw-function 'second :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "list" :type-list 'nil))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 393221 (list "As the other BIND modules BIND-BEZIER is working on points or xy-coordinates. BIND-BEZIER is special in that it works on both x and y, and it returns always an object containg a list of points. The idea is to specify a control point in a transition between p1 and p2, by giving xoff & yoff as RELATIVE values.") 6226208) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 12714148 (list "((1 2))") 2228285) (sbox 'c-patch 'genutils::grid-sample "grid-sample" nil 9961592 (list "()" 10)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 17039461 (list 10 "100" "Untitled") 7077972 '(((6553700 6029426 6291581 7143558 8388750 9830550 11272350 12517542 13369519 13631674 13107400) nil :bpf) ((6553700 6029426 6291581 7143558 8388750 9830550 11272350 12517542 13369519 13631674 13107400))))) (list (list 1 0 4) (list 2 0 4) (list 4 0 5) (list 5 0 0) (list 6 0 1) (list 6 1 2)) t)