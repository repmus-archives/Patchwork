(in-package :pw)(make-win 'c-pw-window "make-bezier" 2752525 28967314 (list (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 15466625 (list "((1 2))") 2228289) (sbox 'c-pw-functional 'genutils:make-bezier "make-bezier" nil 9306132 (list 10 "(100 200)")) (make-instance 'c-pw-resize-x :view-position 18153674 :view-size 2228270 :active-mode nil :pw-function 'second :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "arg-0" :type-list 'nil))) (sbox 'c-pw-functional 'genutils:make-bezier "make-bezier" nil 9175168 (list 10 "(100 200)" 15 0)) (sbox 'c-pw-resize-x 'first "first" nil 18153511 (list "(1 2)") 2228276) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 196610 (list "MAKE-BEZIER is a special case of the more general MAKE-BLEND, either just a ylist (of no more than 2 items!) is given (xlist is then an arithmetic serie), or both xlist & ylist (both of 2 items!) are given. numbers in any range are accepted (integers,floats,etc.), but must be within -32767,32767 if one wants to display them with a BPF. It returns an object that can be used by time-sample, grid-sample, auto-sample. Optionally one can specify 2 control points as ABSOLUTE positions towards which the curve is attracted during its trajectory. Only start and end values are garenteed to be touched, a socalled approximating spline.") 8520062) (sbox 'c-pw-functional 'genutils:make-bezier "make-bezier" nil 9306366 (list 10 "(100 200)" 15 110)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 19791975 (list 10 "100" "Untitled") 7077972 '(((6553610 5439499 4718604 4390925 4456462 4915215 5767184 7012369 8650770 10682387 13107220) nil :bpf) ((6553610 5439499 4718604 4390925 4456462 4915215 5767184 7012369 8650770 10682387 13107220)))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 13500672 (list "Note that the output are in the form of points. This patch is therefore typic for MAKE-BEZIER and an exception to other curves.") 6357108) (sbox 'c-patch 'genutils:grid-sample "grid-sample" nil 12910720 (list "()" 10))) (list (list 0 0 9) (list 2 0 0) (list 4 0 0) (list 7 0 4) (list 7 1 2) (list 9 0 3)) t)