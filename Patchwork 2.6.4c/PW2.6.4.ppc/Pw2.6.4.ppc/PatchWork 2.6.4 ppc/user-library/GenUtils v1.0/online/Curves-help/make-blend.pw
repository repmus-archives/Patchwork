(in-package :pw)(make-win 'c-pw-window "make-blend" 9896007 27590977 (list (sbox 'c-patch 'genutils::grid-sample "grid-sample" nil 17301621 (list "()" 20)) (sbox 'c-patch 'genutils:make-blend "make-blend" nil 13566068 (list 1 "(1 2)" "(2 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 524303 (list "MAKE-BLEND is identical to a BPF in use, either just a ylist is given (xlist is then an arithmetic serie), or both xlist & ylist (of equal length) are given. numbers in any range are accepted (integers/floats etc.), but must be within -32767,32767 if one wants to display them with a BPF. In addition it must have a plist, which is a list of parameters of 1 to 4 items, bend-degree (float>0) ref-degree (int 0-3) slope1 (any) slope2 (any), only first is obligatory. These params can be difficult to estimate, but general effect of 'loose' or 'tigth' elastic. See source-code for more.") 10682647) (sbox 'c-pw-resize-x 'const "const" nil 11927761 (list "(10 50 -6 80)") 2228317) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 18939930 (list 10 "100" "Untitled") 7077972 '(((2621440 3997706 4653076 5636126 7077928 9044018 11468860 11927622 9044048 6553690 4456548 2687086 1179768 -196478 1245324 3276950 5636256 8519850 11993268 16122046 20971720) nil :bpf) ((2621440 3997706 4653076 5636126 7077928 9044018 11468860 11927622 9044048 6553690 4456548 2687086 1179768 -196478 1245324 3276950 5636256 8519850 11993268 16122046 20971720))))) (list (list 0 0 1) (list 1 1 3) (list 4 1 0)) t)