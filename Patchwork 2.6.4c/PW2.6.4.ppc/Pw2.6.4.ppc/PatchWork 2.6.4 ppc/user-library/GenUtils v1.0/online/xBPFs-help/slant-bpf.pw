(in-package :pw)(make-win 'c-pw-window "slant-bpf" 4456464 22085997 (list (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 1310746 (list 10 "100" "Untitled") 7077972 '(((-3211294 1507313 -917492 3014699 -1310651 5963870) nil :bpf) ((-3211294 1507313 -917492 3014699 -1310651 5963870)))) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 13631510 (list 10 "100" "Untitled") 7077972 '(((0 9240700 9240700 9240700 9240700 9240700) nil :bpf) ((0 9240700 9240700 9240700 9240700 9240700) (0 8061009 7012452 8585328 6750327 9240700) (0 7077941 5374032 7929956 4980849 9240700) (0 6160419 4063297 7340122 3670124 9240700) (0 5373975 3080244 6815825 2687080 9240700) (0 4718607 2359338 6291529 1966179 9240700) (0 9240700 9240700 9240700 9240700 9240700) (0 8061009 7012452 8585328 6750327 9240700) (0 7077941 5374032 7929956 4980849 9240700) (0 6160419 4063297 7340122 3670124 9240700) (0 5373975 3080244 6815825 2687080 9240700) (0 4718607 2359338 6291529 1966179 9240700) (0 9240700 9240700 9240700 9240700 9240700) (0 8061009 7012452 8585328 6750327 9240700) (0 7077941 5374032 7929956 4980849 9240700) (0 6160419 4063297 7340122 3670124 9240700) (0 5373975 3080244 6815825 2687080 9240700) (0 4718607 2359338 6291529 1966179 9240700) (0 9240700 9240700 9240700 9240700 9240700) (0 8061009 7012452 8585328 6750327 9240700) (0 7077941 5374032 7929956 4980849 9240700) (0 6160419 4063297 7340122 3670124 9240700) (0 5373975 3080244 6815825 2687080 9240700) (0 4718607 2359338 6291529 1966179 9240700)))) (sbox 'c-patch 'genutils:slant-bpf "slant-bpf" nil 9633816 (list "()" 0.5 1.0)) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 5832840 (list 0 0.2 1)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1572995 (list "Try connect arithm-ser to only <xbias> or <ybias>!") 3735643) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 10485878 (list "SLANT-BPF exponentially distorts <bpfs> according to factors of <ybias> and <xbias>; if factor(s) are larger than 1, then peaks are enhanced, if less, then differences are compressed; 1 leaves <bpfs> untouched. Note that it generally works best if y-points in <bpfs> goes from min to max. Input anything to <bpfs>, a num/list to <xbias> & <ybias> and outputs pr. bpf in <bpfs> as many bpfs as the length of the longest bias.") 9961696)) (list (list 1 1 2) (list 2 0 0) (list 2 1 3) (list 2 2 3)) t)