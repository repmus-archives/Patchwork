(in-package :pw)(make-win 'c-pw-window "02-DEMO-signals" 3473438 34865523 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1310745 (list "SIGNALS used to combine varios signal functions and envelopes. At left an envelope sampled with 20 points controlling amplitude, at right an exponential curve sampled with 20 points controlling frequncey. At bottom right the result of signals & segments only (:FM), at bottom left signal & segment & envelope togehter (:FM & :AM). Note that setting <pars> in envelope to 0.0 results in a 'negative' envelope, effectivly inversing the signal. Try also with 0.5.") 7143757) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 16056562 (list 10 "100" "Untitled") 7077972 '(((65536 65546 65556 65566 65576 131122 131132 131142 131152 196698 196708 262254 262264 327810 327820 393366 458912 524458 524468 590014 65736) nil :bpf) ((65536 65546 65556 65566 65576 131122 131132 131142 131152 196698 196708 262254 262264 327810 327820 393366 458912 524458 524468 590014 65736)))) (sbox 'c-patch 'genutils::grid-sample "grid-sample" nil 22282374 (list "()" 200)) (sbox 'c-patch 'genutils:segments "segments" nil 9437426 (list 1 10 2 2)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 23986415 (list 10 "100" "Untitled") 7077972 '(((0 196609 393218 589827 851972 1048581 1245190 1441799 1638408 1835017 2097162 2293771 2490380 2686989 2949134 3145743 3342352 3538961 3735570 3932179 4128788 4325397 4587542 4784151 4980760 5111833 5308442 5505051 5636124 5767197 5963806 6094879 6225952 6291489 6422562 6488099 6488100 6553637 6553638 6553639 6488104 6422569 6291498 6160427 5963820 5767213 5505070 5242927 4915248 4522033 4128818 3670067 3211316 2621493 2097206 1507383 852024 196665 -458694 -1114053 -1769412 -2424771 -3145666 -3801025 -4390848 -4915135 -5439422 -5832637 -6160316 -6422459 -6553530 -6553529 -6422456 -6160311 -5767094 -5242805 -4587444 -3866547 -2949042 -2031537 -982960 131153 1310802 2424915 3473492 4456533 5242966 5898327 6357080 6553689 6488154 6160475 5570652 4718685 3604574 2359391 917600 -589727 -2031518 -3407773 -4652956 -5635995 -6291354 -6553497 -6356888 -5767063 -4718486 -3342229 -1638292 131181 1900654 3670127 5111920 6094961 6553714 6357107 5570676 4194421 2359414 327799 -1769352 -3800967 -5439366 -6356869 -6487940 -5832579 -4390786 -2293633 65664 2490497 4522114 6029443 6553732 6029445 4456582 2162823 -589688 -3211127 -5308278 -6422389 -6356852 -5046131 -2621298 327823 3276944 5505169 6553746 6029459 4194452 1310869 -1900394 -4783977 -6356840 -6291303 -4390758 -1310565 2228380 5111965 6488222 5963935 3604640 -65375 -3735390 -6094685 -6356828 -4390747 -786266 3080359 5898408 6488233 4587690 721067 -3407700 -6160211 -6225746 -3538769 721072 4718769 6553778 5308595 1573044 -3080011 -6160202 -6029129 -2686792 2162873 5832890 6291643 3211452 -1703747 -5701442 -2555713 6226112 1966273 -6225726 -2621245 5636292 4325573 -3800890 -6160185 200) nil :bpf) ((0 196609 393218 589827 851972 1048581 1245190 1441799 1638408 1835017 2097162 2293771 2490380 2686989 2949134 3145743 3342352 3538961 3735570 3932179 4128788 4325397 4587542 4784151 4980760 5111833 5308442 5505051 5636124 5767197 5963806 6094879 6225952 6291489 6422562 6488099 6488100 6553637 6553638 6553639 6488104 6422569 6291498 6160427 5963820 5767213 5505070 5242927 4915248 4522033 4128818 3670067 3211316 2621493 2097206 1507383 852024 196665 -458694 -1114053 -1769412 -2424771 -3145666 -3801025 -4390848 -4915135 -5439422 -5832637 -6160316 -6422459 -6553530 -6553529 -6422456 -6160311 -5767094 -5242805 -4587444 -3866547 -2949042 -2031537 -982960 131153 1310802 2424915 3473492 4456533 5242966 5898327 6357080 6553689 6488154 6160475 5570652 4718685 3604574 2359391 917600 -589727 -2031518 -3407773 -4652956 -5635995 -6291354 -6553497 -6356888 -5767063 -4718486 -3342229 -1638292 131181 1900654 3670127 5111920 6094961 6553714 6357107 5570676 4194421 2359414 327799 -1769352 -3800967 -5439366 -6356869 -6487940 -5832579 -4390786 -2293633 65664 2490497 4522114 6029443 6553732 6029445 4456582 2162823 -589688 -3211127 -5308278 -6422389 -6356852 -5046131 -2621298 327823 3276944 5505169 6553746 6029459 4194452 1310869 -1900394 -4783977 -6356840 -6291303 -4390758 -1310565 2228380 5111965 6488222 5963935 3604640 -65375 -3735390 -6094685 -6356828 -4390747 -786266 3080359 5898408 6488233 4587690 721067 -3407700 -6160211 -6225746 -3538769 721072 4718769 6553778 5308595 1573044 -3080011 -6160202 -6029129 -2686792 2162873 5832890 6291643 3211452 -1703747 -5701442 -2555713 6226112 1966273 -6225726 -2621245 5636292 4325573 -3800890 -6160185 200)))) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 16056353 (list 10 "100" "Untitled") 7077972 '(((-6553600 -6225910 -5308396 -3866594 -2031576 50 2031676 3866694 5308496 6226010 6553700 6226030 5308536 3866754 2031756 150 -2031456 -3866454 -5308236 -6225730 -6553400) nil :bpf) ((-6553600 -6225910 -5308396 -3866594 -2031576 50 2031676 3866694 5308496 6226010 6553700 6226030 5308536 3866754 2031756 150 -2031456 -3866454 -5308236 -6225730 -6553400)))) (sbox 'c-patch 'genutils:envelopes "envelopes" nil 9371681 (list 100 1.0 0.0 2)) (sbox 'c-patch 'genutils::grid-sample "grid-sample" nil 13303842 (list "()" 20)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" t 23920683 (list 10 "100" "Untitled") 7077972 '(((0 -196598 -393196 -589794 -786392 -982990 -1179588 -1376186 -1572784 -1769382 -1965980 -2162578 -2293640 -2490238 -2621300 -2752362 -2883424 -3014486 -3145548 -3276610 -3342136 -3407662 -3473188 -3538714 -3538704 -3604230 -3604220 -3604210 -3538664 -3538654 -3473108 -3407562 -3276480 -3210934 -3014316 -2883234 -2752152 -2555534 -2358916 -2227834 -2031216 -1769062 -1572444 -1310290 -1113672 -917054 -654900 -458282 -327200 -130582 500 131582 197128 262674 262684 197158 131632 66106 -130492 -327090 -523688 -851358 -1113492 -1506698 -1834368 -2227574 -2555244 -2948450 -3276120 -3603790 -3865924 -3996986 -4062512 -4062502 -3931420 -3669266 -3341576 -2817278 -2292980 -1572074 -785632 131882 1114932 2032446 3015496 3933010 4719452 5374822 5833584 6095738 6161284 5899150 5374872 4588450 3539884 2294710 918464 -588854 -2030636 -3406882 -4652056 -5635086 -6224900 -6487034 -6224880 -5569510 -4586460 -3210194 -1571784 132162 1836108 3474518 4719712 5571690 5833844 5571710 4785288 3540114 2032796 263334 -1440592 -3013446 -4127548 -4717362 -4717352 -4061982 -2947860 -1506058 66816 1508618 2688276 3343646 3474728 3015986 2098492 984390 -260784 -1243814 -1899164 -2161298 -1964680 -1374846 -653940 66966 591264 853418 787892 591294 263624 67026 1500 132582 394736 591354 525828 198158 -391656 -1112542 -1636820 -1636810 -1112512 1610 1377876 2426462 2688616 1967730 394876 -1571194 -3144048 -3602790 -2685276 -457042 2164408 3999426 4196044 2492118 -522528 -3471638 -4978956 -4192514 -1308920 2557714 5179164 5113638 2295600 -1898694 -5175484 -5699762 -2947240 1574754 5375852 2426742 -5961856 -1898614 6031252 2557854 -5503064 -4257870 3737532 6162374 2000) nil :bpf) ((0 -196598 -393196 -589794 -786392 -982990 -1179588 -1376186 -1572784 -1769382 -1965980 -2162578 -2293640 -2490238 -2621300 -2752362 -2883424 -3014486 -3145548 -3276610 -3342136 -3407662 -3473188 -3538714 -3538704 -3604230 -3604220 -3604210 -3538664 -3538654 -3473108 -3407562 -3276480 -3210934 -3014316 -2883234 -2752152 -2555534 -2358916 -2227834 -2031216 -1769062 -1572444 -1310290 -1113672 -917054 -654900 -458282 -327200 -130582 500 131582 197128 262674 262684 197158 131632 66106 -130492 -327090 -523688 -851358 -1113492 -1506698 -1834368 -2227574 -2555244 -2948450 -3276120 -3603790 -3865924 -3996986 -4062512 -4062502 -3931420 -3669266 -3341576 -2817278 -2292980 -1572074 -785632 131882 1114932 2032446 3015496 3933010 4719452 5374822 5833584 6095738 6161284 5899150 5374872 4588450 3539884 2294710 918464 -588854 -2030636 -3406882 -4652056 -5635086 -6224900 -6487034 -6224880 -5569510 -4586460 -3210194 -1571784 132162 1836108 3474518 4719712 5571690 5833844 5571710 4785288 3540114 2032796 263334 -1440592 -3013446 -4127548 -4717362 -4717352 -4061982 -2947860 -1506058 66816 1508618 2688276 3343646 3474728 3015986 2098492 984390 -260784 -1243814 -1899164 -2161298 -1964680 -1374846 -653940 66966 591264 853418 787892 591294 263624 67026 1500 132582 394736 591354 525828 198158 -391656 -1112542 -1636820 -1636810 -1112512 1610 1377876 2426462 2688616 1967730 394876 -1571194 -3144048 -3602790 -2685276 -457042 2164408 3999426 4196044 2492118 -522528 -3471638 -4978956 -4192514 -1308920 2557714 5179164 5113638 2295600 -1898694 -5175484 -5699762 -2947240 1574754 5375852 2426742 -5961856 -1898614 6031252 2557854 -5503064 -4257870 3737532 6162374 2000)))) (sbox 'c-patch 'genutils::grid-sample "grid-sample" nil 13304049 (list "()" 20)) (sbox 'c-patch 'genutils:signals "signals" nil 14942345 (list 100 10 0.0 0))) (list (list 1 1 9) (list 2 0 10) (list 5 1 7) (list 7 0 6) (list 8 1 2) (list 9 0 3) (list 10 0 7) (list 10 1 9)) t)