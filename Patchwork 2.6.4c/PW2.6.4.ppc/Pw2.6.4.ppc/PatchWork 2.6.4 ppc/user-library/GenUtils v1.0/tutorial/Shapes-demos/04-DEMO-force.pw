(in-package :pw)(make-win 'c-pw-window "04-DEMO-force" 3080198 28443159 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 590082 (list "FORCE can be used to 'bring out' the general profile of any function. It is based on a classical averaging technique known as ROOT-MEAN-SQUARE, that measures energy in a signal. At far left you see a bpf with the result of a beta distribution, rather scattered, but raising from left-to-right. In the middle the measure is done on vectors of 9 points, iterated 3 times over the whole bpf. At far right the measure is done on the whole bpf ine one take, so as to show the extreme simplified 'tendency' in the signal (a straigth line!). Some funny beta values : 0.5/0.5 = equal, but rythmic, 1.5/0.5 or 0.5/1.5 = weigthed towards one of them, 0.25/1.0 or 1.0/0.25 the weaker follows as a shadow. Imagine fx. the y-range being an interpolation between a 0-thing and a 1-thing.") 15073541) (sbox 'c-patch 'genutils::force "force" nil 16253191 (list "()" 9 3 3)) (sbox 'c-pw-functional 'g-scaling "g-scaling" nil 7864480 (list 0 0.25 1.5)) (sbox 'c-patch 'genutils::force "force" nil 16253354 (list "()" 100 3 1)) (sbox 'c-pw-functional 'genutils:deviations "deviations" nil 6225985 (list 0 1.0)) (sbox 'c-pw-functional 'genutils:deviations "deviations" nil 11665521 (list 7 2.0 0.5)) (sbox 'c-patch 'g* "g*" nil 17367155 (list 0 100)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 20054130 (list 10 "100" "Untitled") 7077972 '(((0 983041 2883586 524291 3801092 196613 65542 65543 1114120 655369 10 589835 65548 5242893 2031630 327695 131088 3211281 131090 65555 327700 458773 22 393239 65560 2555929 851994 2818075 1179676 2687005 720926 1048607 3604512 3735585 655394 393251 1310756 786469 1507366 1310759 4390952 786473 327722 3145771 1310764 983085 589870 47 262192 1703985 4522034 6160435 1114164 2031669 4653110 2687031 2555960 6422585 983098 1376315 2162748 3211325 1638462 1572927 1114176 6160449 1179714 4653123 65604 1900613 3342406 5242951 6029384 131145 1638474 1310795 5636172 655437 5898318 5832783 80 983121 1900626 196691 131156 393301 2359382 2883671 5439576 3276889 458842 6488155 5570652 6029405 131166 3997791 1507424 5767265 6553698 2687075 6553700) nil :bpf) ((0 983041 2883586 524291 3801092 196613 65542 65543 1114120 655369 10 589835 65548 5242893 2031630 327695 131088 3211281 131090 65555 327700 458773 22 393239 65560 2555929 851994 2818075 1179676 2687005 720926 1048607 3604512 3735585 655394 393251 1310756 786469 1507366 1310759 4390952 786473 327722 3145771 1310764 983085 589870 47 262192 1703985 4522034 6160435 1114164 2031669 4653110 2687031 2555960 6422585 983098 1376315 2162748 3211325 1638462 1572927 1114176 6160449 1179714 4653123 65604 1900613 3342406 5242951 6029384 131145 1638474 1310795 5636172 655437 5898318 5832783 80 983121 1900626 196691 131156 393301 2359382 2883671 5439576 3276889 458842 6488155 5570652 6029405 131166 3997791 1507424 5767265 6553698 2687075 6553700)))) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 19923208 (list 10 "100" "Untitled") 7077972 '(((1900544 1900545 1900546 1900547 1835012 1769477 1703942 1638407 1572872 1572873 1507338 1572875 1638412 1703949 1769486 1835023 1900560 1966097 2031634 2097171 2097172 2097173 2097174 2097175 2097176 2031641 2031642 2031643 2031644 2031645 2097182 2162719 2228256 2359329 2490402 2621475 2752548 2949157 3080230 3145767 3276840 3342377 3342378 3342379 3342380 3342381 3276846 3211311 3211312 3145777 3145778 3145779 3211316 3276853 3342390 3407927 3473464 3539001 3604538 3604539 3670076 3670077 3670078 3670079 3604544 3539009 3473474 3342403 3276868 3211333 3145798 3145799 3145800 3211337 3342410 3539019 3670092) nil :y-points) ((1900544 1900545 1900546 1900547 1835012 1769477 1703942 1638407 1572872 1572873 1507338 1572875 1638412 1703949 1769486 1835023 1900560 1966097 2031634 2097171 2097172 2097173 2097174 2097175 2097176 2031641 2031642 2031643 2031644 2031645 2097182 2162719 2228256 2359329 2490402 2621475 2752548 2949157 3080230 3145767 3276840 3342377 3342378 3342379 3342380 3342381 3276846 3211311 3211312 3145777 3145778 3145779 3211316 3276853 3342390 3407927 3473464 3539001 3604538 3604539 3670076 3670077 3670078 3670079 3604544 3539009 3473474 3342403 3276868 3211333 3145798 3145799 3145800 3211337 3342410 3539019 3670092)))) (sbox 'c-pw-functional 'g-scaling "g-scaling" nil 9109522 (list 0 1.5 0.25)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 19923372 (list 10 "100" "Untitled") 7077972 '(((2883584 2949121) nil :bpf) ((2883584 2949121)))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 2162701 (list "little construct to make a beta distribution") 3473497) (sbox 'c-pw-functional 'genutils::one-time "one-time" nil 3473520 (list 100 0))) (list (list 1 0 7) (list 2 0 4) (list 3 0 7) (list 4 1 12) (list 5 1 2) (list 5 2 9) (list 6 0 5) (list 7 1 6) (list 8 1 1) (list 9 0 4) (list 10 1 3)) t)