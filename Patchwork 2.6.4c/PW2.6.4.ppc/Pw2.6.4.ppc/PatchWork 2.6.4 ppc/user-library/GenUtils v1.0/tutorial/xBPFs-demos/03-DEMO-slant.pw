(in-package :pw)(make-win 'c-pw-window "03-DEMO-slant" 5898274 24445595 (list (sbox 'c-pw-loop 'pwrepeat "pwrepeat" nil 3211400 (list 13 0)) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 5832840 (list 0 0.2 1)) (sbox 'c-patch 'genutils:slant-bpf "slant-bpf" nil 9633816 (list "()" 0.5 1.0)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 13631510 (list 10 "100" "Untitled") 7077972 '(((6291456 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 120) nil :bpf) ((6291456 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 6291576 120) (5767168 5701705 5832788 6226011 6291552 5701733 4849768 5701740 2556015 5767281 5963892 5636214 120) (5308416 5177388 5374011 6160453 6291533 5111893 3735643 5177441 983142 5308523 5636208 4980852 120) (4849664 4718619 4980777 6094900 6291518 4653127 2883663 4718679 393310 4849765 5308524 4456562 120) (4456448 4259856 4587549 6029352 6291506 4194364 2228293 4259918 131159 4456543 4980840 3997808 120) (4063232 3866634 4259860 5963806 6291496 3801138 1703996 3866694 65616 4063322 4718692 3539054 120)))) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 1310746 (list 10 "100" "Untitled") 7077972 '(((4325376 4128778 4522004 6225950 6553640 4063282 1966140 4128838 327760 4325466 4980836 3801198 262264) nil :bpf) ((4325376 4128778 4522004 6225950 6553640 4063282 1966140 4128838 327760 4325466 4980836 3801198 262264)))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 10485878 (list "SLANT-BPF exponentially distorts <bpfs> according to factors of <ybias> and <xbias>; if factor(s) are larger than 1, then peaks are enhanced, if less, then differences are compressed; 1 leaves <bpfs> untouched. Note that it generally works best if y-points in <bpfs> goes from min to max. Input anything to <bpfs>, a num/list to <xbias> & <ybias> and outputs pr. bpf in <bpfs> as many bpfs as the length of the longest bias.") 9961696) (make-instance 'c-pw-resize-x :view-position 7405938 :view-size 2228291 :active-mode nil :pw-function 'cirlist :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917561 :dialog-item-text "2.718281828" :doc-string "elem" :type-list 'nil))) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 4260201 (list "(f(x bias) = (expt x bias))") 2228399) (sbox 'c-patch 'get-slot "get-slot" nil 1179966 (list "()" "y-points")) (sbox 'c-pw-resize-x 'g-max "g-max" nil 12386666 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'mapcar "mapcar" nil 7995843 (list "1+" "(1 2)" "(1 2)")) (sbox 'c-pw-resize-x 'g-min "g-min" nil 11338326 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'g-scaling "g-scaling" nil 12976623 (list 0 0 0)) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" t 15663507 (list 10 "100" "Untitled") 7077972 '(((2293760 2031626 2555924 5767198 6553640 1966130 524348 2031686 262224 2293850 3276900 1704046 262264) nil :bpf) ((2293760 2031626 2555924 5767198 6553640 1966130 524348 2031686 262224 2293850 3276900 1704046 262264)))) (sbox 'c-patch 'g-random "g-random" nil 524426 (list 0 100)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 917912 (list "patch to show flow of y-points distortion.") 1966234) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3539165 (list "Try connect arithm-ser to only <xbias> or <ybias>!") 3735643)) (list (list 0 1 14) (list 2 0 4) (list 2 1 1) (list 2 2 1) (list 3 1 2) (list 4 1 0) (list 8 0 4) (list 9 0 8) (list 10 0 7) (list 10 1 8) (list 10 2 6) (list 11 0 8) (list 12 0 10) (list 12 1 11) (list 12 2 9) (list 13 1 12)) t)