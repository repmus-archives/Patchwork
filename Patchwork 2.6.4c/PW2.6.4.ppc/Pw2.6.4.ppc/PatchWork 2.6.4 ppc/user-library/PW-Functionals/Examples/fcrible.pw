(in-package :pw)(make-win 'c-pw-window "fcrible" 3276821 33292744 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 1900696 (list "crible de durées. Fonctionnelle") 2687106) (sbox 'c-pw-functional 'apply "apply" nil 15925282 (list "+" "(1 2)")) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 524310 (list 10 "100" "Untitled") 7077972 '(((0 2621450 4390939 5898291 6422597 6553700) nil :bpf) ((0 2621450 4390939 5898291 6422597 6553700)))) (sbox 'c-pw-functional 'funcall "funcall" nil 26017889 (list "+" 0 5 5)) (sbox 'c-patch 'g+ "g+" nil 12910619 (list 0 1)) (sbox 'c-patch 'bpf-sample "bpf-sample" nil 7995417 (list "nil" 30 0 76 0.1 0)) (sbox 'c-pw-functional 'create-list "create-list" nil 19202084 (list 10 1)) (abst 'c-abstract-m 'user-abstraction::crible297 "fcrib" nil 23920666 (list) 'nil 'nil (make-win 'c-pw-window "fcrib" 3866653 35389898 (list (sbox 'c-pw-test 'test "test" nil 24969226 (list "=" 0 0 0 0)) (sbox 'c-funarg-patch 'funarg "funarg" nil 29949962 (list "nil" "crible") nil '((list 'defun 'user-supplied-in-outs::crible '(common-lisp-user::var1 common-lisp-user::var2 common-lisp-user::var3) (list 'let (list (list '*global-calling-object* *global-clock*)) '(incf (clock *global-calling-object*)) (list 'cond (list (list '= (list 'length 'common-lisp-user::var1) '0) 'common-lisp-user::var1) (list t (list 'cond (list (list '= 'common-lisp-user::var2 '0) (list 'cons (list 'g- ''0 (list 'first 'common-lisp-user::var1)) (list 'user-supplied-in-outs::crible (list 'rest 'common-lisp-user::var1) 'common-lisp-user::var3 'common-lisp-user::var3))) (list t (list 'cons (list 'first 'common-lisp-user::var1) (list 'user-supplied-in-outs::crible (list 'rest 'common-lisp-user::var1) (list 'g- 'common-lisp-user::var2 ''1) 'common-lisp-user::var3)))))))) common-lisp-user::crible)) (sbox 'c-funarg-input 'parameter "parameter" nil 5964056 (list 3)) (sbox 'c-eval-fun 'eval-fun "eval-fun" nil 13893772 (list "crible" "nil" "nil" "nil")) (sbox 'c-funarg-input 'parameter "parameter" nil 7471262 (list 2)) (sbox 'c-pw-resize-x 'length "length" nil 20643853 (list "(1 2)") 2228270) (sbox 'c-patch 'g- "g-" nil 10879231 (list 0 0)) (sbox 'c-patch 'cons "cons" nil 14090575 (list 0 "(1 2)")) (sbox 'c-pw-resize-x 'first "first" nil 2949285 (list "(1 2)") 2228270) (sbox 'c-pw-resize-x 'rest "rest" nil 2425150 (list "(1 2)") 2228270) (sbox 'c-pw-test 'test "test" nil 19595495 (list "=" 0 0 0 0)) (sbox 'c-eval-fun 'eval-fun "eval-fun" nil 9765228 (list "crible" "nil" "nil" "nil")) (sbox 'c-patch 'g- "g-" nil 11206791 (list 0 1)) (sbox 'c-funarg-input 'parameter "parameter" nil 12 (list 1)) (sbox 'c-patch 'cons "cons" nil 17563768 (list 0 "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 33161235 (list "fcrib"))) (list (list 0 1 5) (list 0 3 13) (list 0 4 10) (list 1 0 0) (list 3 1 9) (list 3 2 12) (list 3 3 2) (list 5 0 13) (list 6 1 8) (list 7 0 6) (list 7 1 11) (list 8 0 13) (list 9 0 13) (list 10 1 4) (list 10 3 7) (list 10 4 14) (list 11 1 9) (list 11 2 2) (list 11 3 2) (list 12 0 4) (list 14 0 8) (list 14 1 3) (list 15 0 1)) nil))) (list (list 1 1 4) (list 3 0 7) (list 3 1 6) (list 4 0 5) (list 5 0 2) (list 6 0 1)) t)