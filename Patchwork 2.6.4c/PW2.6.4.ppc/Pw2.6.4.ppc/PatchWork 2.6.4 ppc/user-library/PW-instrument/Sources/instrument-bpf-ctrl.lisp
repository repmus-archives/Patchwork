(in-package :pw);====================================================================================================;====================================================================================================; pw interface;====================================================================================(defvar *chant-global-bpf-editor* ()) (defclass C-mini-bpf-view-chant (C-mini-bpf-view) ())(defmethod initialize-instance :after ((self C-mini-bpf-view-chant) &rest args)  (declare (ignore args))  (unless (break-point-function self)    (setf (break-point-function self) (make-break-point-function '(0 50 100) '(0 100 0)))    (scale-to-fit-in-rect self)))(defmethod view-click-event-handler ((self C-mini-bpf-view-chant) where) (declare (ignore where)) (when (DOUBLE-CLICK-P)   (unless *chant-global-bpf-editor*    (setq *chant-global-bpf-editor*       (make-BPF-editor         (make-break-point-function '(0 100) '(0 100)))))  (set-window-title *chant-global-bpf-editor* (doc-string self))   (set-mini-view *chant-global-bpf-editor* self)  (set-pw-win *chant-global-bpf-editor* (view-window self))  (add-bpf-to-bpf-editor-from-PW *chant-global-bpf-editor* (break-point-function self))  (erase+view-draw-contents *chant-global-bpf-editor*)  (window-select *chant-global-bpf-editor*)))  (defmethod patch-value ((self C-mini-bpf-view-chant) obj)  (declare (ignore obj))  (break-point-function self))(add-pw-input-type 'bpf-view-small-pw-type 'C-mini-bpf-view-chant                   (list      :value 0                              :view-size #@( 36 14)                              :type-list '(bpf list)));=============================================================(defclass C-patch-with-mini-bpf (C-patch)  ())(defmethod position-of-mini-bpf ((self C-patch-with-mini-bpf)) 1)(defmethod decompile ((self C-patch-with-mini-bpf))  (let ((bpf (patch-value (nth (position-of-mini-bpf self) (pw-controls self)) ())))    (append (call-next-method) `(nil ',(decompile bpf)))))(defmethod complete-box ((self C-patch-with-mini-bpf) bpf)  (setf (break-point-function (nth (position-of-mini-bpf self) (pw-controls self))) (eval bpf))  (update-mini-view (nth (position-of-mini-bpf self) (pw-controls self))))(defmethod patch-work-type-of ((self C-patch-with-mini-bpf) ctrl-index)  (if (= ctrl-index (position-of-mini-bpf self))      (list 'bpf-view-small-pw-type (list :value 0))      (call-next-method)))