(in-package :pw);================================================;; alto-clef(defparameter *alto-clef* (make-instance 'C-clef  :clef #\B :delta-y -1))(defparameter *alto-staff* (make-instance 'C-staff         :clef-obj  *alto-clef* :delta-y (- (* *mn-staff-line-width* -2) 1)))(defparameter *alto-plain-staffs* (list *alto-staff*))   ;number 8;================================================;; tenor-clef(defparameter *tenor-clef* (make-instance 'C-clef  :clef #\B :delta-y 3))(defparameter *tenor-staff* (make-instance 'C-staff         :clef-obj  *tenor-clef* :delta-y (- (* *mn-staff-line-width* -2) 5)))(defparameter *tenor-plain-staffs* (list *tenor-staff*))   ;number 9;================================================(setf *global-staff-list*    '(*g2-g-staffs* *g-plain-staffs* *g-f-staffs*         *f-plain-staffs* *g-f-f2-staffs* *g2-g-f-f2-staffs* *empty-staffs*          *alto-plain-staffs* *tenor-plain-staffs*))(defun get-staff-offsets (staff-num) ;;for draw-ledger-for-notes    (case staff-num     (1 (values 32 4)) (2 (values 4 4)) (3 (values 4 -20))    (4 (values -20 -20)) (5 (values 4 -48)) (6 (values 32 -48))    (7 (values 0 0))     (8 (values -8 -8))    (9 (values -4 -4))))(let ((menus (menu-items (find "Choose Staff" (menu-items *RTM-menu*) :key #'menu-item-title :test #'string=))))   (add-menu-items (first menus) (make-instance 'menu-item :menu-item-title "Alto"                                                         :menu-item-action #'(lambda() (edit-rtm-editor-staff-layout *active-rtm-window* 8))))   (add-menu-items (second menus) (make-instance 'menu-item :menu-item-title "Alto"                                                         :menu-item-action #'(lambda() (edit-rtm-editor-staffs-layout *active-rtm-window* 8))))   (add-menu-items (first menus) (make-instance 'menu-item :menu-item-title "Tenor"                                                         :menu-item-action #'(lambda() (edit-rtm-editor-staff-layout *active-rtm-window* 9))))   (add-menu-items (second menus) (make-instance 'menu-item :menu-item-title "Tenor"                                                         :menu-item-action #'(lambda() (edit-rtm-editor-staffs-layout *active-rtm-window* 9)))));========================================================================================(defparameter *rtm-window-key-fns* ())(defun apply-rtm-window-key-events (char)  (dolist (fn+charl *rtm-window-key-fns*)    (when (apply-rtm-window-key-event char (second fn+charl) (first fn+charl))      (return) t)))(defun apply-rtm-window-key-event (char fn charl) (when (atom charl) (setq charl (list charl))) (when (member char charl :test #'eql)   (funcall fn char)   t))(defmethod key-pressed-extra :before ((self C-rtm-editor-window) char)  (apply-rtm-window-key-events char))(push `((#\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9) ,#'(lambda (char) (edit-rtm-editor-staff-layout *active-rtm-window* (- (char-code char) (char-code #\0)))))      *rtm-window-key-fns*);========================================================================================