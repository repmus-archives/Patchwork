(in-package :pw)(make-win 'c-pw-window "Interpol-prof-patch" 2686979 23331450 (list (abst 'c-abstract-m 'user-abstraction::mk-dels "mk-dels" nil 16580884 (list "(1 2)" 30) '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::l-del epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "mk-dels" 17039664 12648684 (list (sbox 'c-pw-functional 'mapcar "mapcar" t 2621440 (list "length" "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 10420303 (list "mk-dels")) (sbox 'c-patch 'g+ "g+" t 7733307 (list 0 0)) (sbox 'c-patch 'g* "g*" t 5374008 (list 0 10)) (sbox 'c-abstract-in 'absin "absin" t 1 (list "list" 1)) (sbox 'c-abstract-in 'absin "absin" t 5963928 (list "l-del" 2))) (list (list 0 1 4) (list 1 0 2) (list 2 0 3) (list 2 1 5) (list 3 0 0)) nil)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 2555918 (list (note (list 2100 100 0 94 nil 1 100 nil) (list 2500 100 0 112 nil 1 100 nil) (list 2700 100 0 76 nil 1 100 nil) (list 2800 100 0 58 nil 1 100 nil) (list 2800 100 0 130 nil 1 100 nil) (list 3100 100 0 40 nil 1 100 nil) (list 3100 100 0 148 nil 1 100 nil) (list 3200 100 0 166 nil 1 100 nil))) nil :order) (sbox 'c-patch-chord-box-m 'chord "chord" nil 1769800 (list (note (list 6000 100 0 0 nil 1 100 nil) (list 6200 100 0 1 nil 1 100 nil) (list 6400 100 0 2 nil 1 100 nil) (list 6500 100 0 3 nil 1 100 nil) (list 6700 100 0 4 nil 1 100 nil) (list 6900 100 0 5 nil 1 100 nil) (list 7100 100 0 6 nil 1 100 nil))) nil :midic) (sbox 'c-patch-chord-box-m 'chord "chord" nil 1769912 (list (note (list 6025 100 0 0 nil 1 100 nil) (list 6225 100 0 1 nil 1 100 nil) (list 6425 100 0 2 nil 1 100 nil) (list 6525 100 0 3 nil 1 100 nil) (list 6725 100 0 4 nil 1 100 nil) (list 6925 100 0 5 nil 1 100 nil) (list 7125 100 0 6 nil 1 100 nil))) nil :midic) (sbox 'c-pw-functional 'list "list" nil 12124537 (list 0 0 0)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 1769856 (list (note (list 6050 100 0 40 nil 1 100 nil) (list 6250 100 0 58 nil 1 100 nil) (list 6450 100 0 76 nil 1 100 nil) (list 6550 100 0 94 nil 1 100 nil) (list 6750 100 0 112 nil 1 100 nil) (list 6950 100 0 130 nil 1 100 nil) (list 7150 100 0 148 nil 1 100 nil))) nil :midic) (sbox 'c-patch-chord-line:c-patch-chord-line 'chordseq "chordseq" nil 17301677 (list 6000 54 75 100 0 1) nil (list nil nil)) (sbox 'c-pw-resize-x 'const "const" nil 917679 (list "(5 8 6 4)") 2228338) (sbox 'c-patch 'profile::interpol-prof "interpol-prof" nil 2687047 (list 6000 6000 10 "nil" "nil" "nil" 5 8)) (sbox 'c-patch-chord-box-m 'chord "chord" nil 4063438 (list (note (list 9300 100 0 76 nil 1 100 nil) (list 9500 100 0 40 nil 1 100 nil) (list 10000 100 0 58 nil 1 100 nil))) nil :order) (abst 'c-abstract-m 'user-abstraction::mk-offs "mk-offs" nil 15007841 (list "(1 2)") '((sequence list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list)))) 'nil (make-win 'c-pw-window "mk-offs" 5439624 17957164 (list (sbox 'c-patch 'arithm-ser "arithm-ser" nil 9633898 (list 0 10 30)) (sbox 'c-pw-resize-x 'length "length" nil 3014780 (list "(1 2)") 2228270) (sbox 'c-abstract-out 'absout "absout" nil 14680240 (list "mk-offs")) (sbox 'c-enum-collect-source 'enum "enum" nil 3801120 (list "(1 2)")) (sbox 'c-abstract-in 'absin "absin" nil 0 (list "list" 1)) (sbox 'c-map-first 'pwmap "pwmap" nil 14876743 (list "foo" "(1 2)")) (sbox 'c-patch 'g- "g-" nil 4653221 (list 0 1)) (sbox 'c-patch 'g* "g*" nil 7209129 (list 0 10))) (list (list 0 2 7) (list 1 0 3) (list 2 0 5) (list 3 0 4) (list 5 0 3) (list 5 1 0) (list 6 0 1) (list 7 0 6)) nil)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 8323155 '(0) 2228270) (sbox 'c-pw-functional 'create-list "create-list" nil 14221801 (list 16 0 "(1 2)")) (sbox 'c-patch-multi-function 'multi-bpf "multi-bpf" nil 1769969 (list 10 "100" "Untitled") 7077972 '(((0 6225955 1900619 6553700) nil :bpf) ((0 6225955 1900619 6553700))))) (list (list 0 0 11) (list 4 0 2) (list 4 1 5) (list 4 2 3) (list 6 0 11) (list 6 1 0) (list 6 4 10) (list 8 0 1) (list 8 1 9) (list 10 0 11) (list 11 0 8) (list 12 2 4)) t)