(in-package :pw)(make-win 'c-pw-window "feuillete" 3735557 26149550 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 15532464 (list "Here, there is a fractional pulsation 5/16. The las 2 lines in the result show you what it looks like when the beat itsel is not subdivided. The first two lines show a solution where the perceived beat is itself divided into three (triplets in a 5/16 pulsation !...)") 8978613) (sbox 'c-patch 'screamer::feuillete "feuillete" nil 4587594 (list -1 180 1/4 -1 -1 15 -1 -1)) (sbox 'c-pw-resize-x 'const "const" nil 1310933 (list "(2 3 5 7 3/2 4/3 5/2 5/3 5/4 )") 2228419) (sbox 'c-patch-score-voice 'rtm "rtm" nil 10485834 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60 "nil") nil (list '(327685 7930430 0 1 60 10 4653620 7 50 20 3/5 3276810 8258130 "rtm") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 45.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 33 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 66 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 100 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 133 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 166 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 200 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 233 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 266 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 300 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 333 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 366 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1) (list (make-c-chord 400 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 433 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 466 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 533 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 566 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1) (list (make-c-chord 600 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 633 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 666 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1) (list (make-c-chord 700 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 733 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 766 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))))) nil)) (sbox 'c-pw-resize-x 'const "const" nil 1376359 (list "(b 1 5)") 2228278) (sbox 'c-patch 'screamer::feuillete "feuillete" nil 4063445 (list -1 180 1/4 -1 -1 -1 -1 2)) (sbox 'c-pw-resize-x 'const "const" nil 1376266 (list "(1 2 3 4 5)") 2228309) (sbox 'c-patch-score-voice 'rtm "rtm" nil 10551508 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60 "nil") nil (list '(327685 23659058 0 4 97 10 20382228 7 50 20 97/100 2686979 23986758 "rtm") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 72.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(2 2 1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 33 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 66 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 2 2) (list (make-c-chord 100 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 133 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(2 1) (list (make-c-chord 167 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 200 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 2) (list (make-c-chord 233 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 25.71 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1 1 1 1 1) (list (make-c-chord 267 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 300 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 333 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 367 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 400 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 433 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 467 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1 1 1 1) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 533 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 567 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 600 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 633 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 667 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 700 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 36.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1 1 1) (list (make-c-chord 734 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 767 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 800 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 833 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 867 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1 1) (list (make-c-chord 900 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 933 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))) (make-c-chord 967 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1000 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1033 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1) (list (make-c-chord 1067 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1100 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1133 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1) (list (make-c-chord 1167 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1200 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1233 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 90.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1) (list (make-c-chord 1267 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1300 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1) (list (make-c-chord 1333 (list (make-c-note 6000 35 nil 4 100 1 nil 0 0 nil))) (make-c-chord 1366 (list (make-c-note 6000 35 nil 5 100 1 nil 0 0 nil))))))))) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 15532056 (list "Here, there is an impulsion at a frequency of 180 (per mn), 15 measures in a mn, the number of beats per measure is limited to 5, and the number of impulsions inside a beat is limited to 5") 6881439) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 15466701 (list "Here, the impulsion tempo is 180, 2 beats per measure max, and a list of values is given for the number of beat subdivision. Note that fractional values are allowed.") 6881439) (sbox 'c-pw-resize-x 'const "const" nil 4653456 (list "(1 3)") 2228278) (sbox 'c-patch-score-voice 'rtm "rtm1" t 8913378 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60 "nil") nil (list '(327685 23134833 0 4 106 10 19858023 7 50 20 53/50 2686979 23462533 "rtm1") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "8" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(5 1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 41 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(4.0 2) (list (make-c-chord 83 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(3.0 3) (list (make-c-chord 125 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0 4) (list (make-c-chord 166 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 5) (list (make-c-chord 208 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(5 1) (list (make-c-chord 250 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 291 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(4.0 2) (list (make-c-chord 333 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(3.0 3) (list (make-c-chord 375 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0 4) (list (make-c-chord 416 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 5) (list (make-c-chord 458 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(5 5 2) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 541 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 583 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(3.0 5 4) (list (make-c-chord 625 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 666 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 5 5 1) (list (make-c-chord 708 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 750 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 791 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(4.0 5 3) (list (make-c-chord 833 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 875 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0 5 5) (list (make-c-chord 916 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))) (make-c-chord 958 (list (make-c-note 6000 35 nil 6 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "8" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(2) (list (make-c-chord 1000 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0) (list)) (beat-constructor 1 '(1.0 1) (list (make-c-chord 1125 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0) (list)) (beat-constructor 1 '(2.0) (list)) (beat-constructor 1 '(2) (list (make-c-chord 1250 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0) (list)) (beat-constructor 1 '(1.0 1) (list (make-c-chord 1375 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0) (list)) (beat-constructor 1 '(2.0) (list)))) (make-instance 'c-measure :low "4" :metronome 60.0 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(4) (list (make-c-chord 1500 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1.0 3) (list (make-c-chord 1625 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(2.0 2) (list (make-c-chord 1750 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(3.0 1) (list (make-c-chord 1875 (list (make-c-note 6000 35 nil 18 100 1 nil 0 0 nil))))) (beat-constructor 1 '(4.0) (list)))))) nil)) (sbox 'c-patch 'screamer::feuillete "feuillete" nil 2163168 (list -1 -1 5/16 60 -1 -1 1 4))) (list (list 1 6 6) (list 1 7 4) (list 3 4 1) (list 5 6 2) (list 7 4 5) (list 11 4 12) (list 12 6 10)) t)