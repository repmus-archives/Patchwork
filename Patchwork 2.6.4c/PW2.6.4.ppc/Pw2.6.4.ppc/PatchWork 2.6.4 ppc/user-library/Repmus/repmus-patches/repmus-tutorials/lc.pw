(in-package :pw)(make-win 'c-pw-window "lc" 4063238 28901879 (list (sbox 'c-pw-resize-x '|repmus|::eval-crible "eval-crible" nil 8716680 (list "c") 2228302) (sbox 'c-pw-resize-x '|repmus|::lc "lc" nil 7471125 (list "nil") 2228270) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 10092550 (list "Then evaluate here.") 2359391) (sbox 'c-pw-resize-x 'const "const" nil 8782003 (list "(x1 x2 x3 x12 x13 x23 x123)") 2228430) (sbox 'c-patch-ascii-buffer 'text-win "New" nil 4325389 (list "(1 2)" 4)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil -65531 (list "Open here the file 'lc.txt' in the 'repmus-tutorials' folder") 4063356) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 6488240 (list "See the contents of the partition sets of sieves c2,c3,c5") 2031841) (sbox 'c-pw-resize-x 'const "const" nil 2359464 (list "(c2 c3 c5 uu ii dd ee cuu as rs lf)") 2228430) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 131320 (list "See the contents of some sieves") 2031841) (sbox 'c-pw-resize-x '|repmus|::eval-crible "eval-crible" nil 2359683 (list "c") 2228302) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text1" nil 21758058 (list "Lock the rtm box. Then evaluate the prtm. Try to connect the second const to the crible-rtm box. Try to change the option param from 'silence' to 'liaison'") 5701823) (sbox 'c-patch-polifrtm 'poly-rtm "prtm1" nil 23461918 (list "nil") nil (list '(327685 24576584 0 4 58 (10 5308990 7 50 20 29/50) (5308426 5308990 7 50 20 29/50) (10616842 5308990 7 50 20 29/50) (15925258 5308990 7 50 20 29/50) 5832736 24904284 "prtm1") (list (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 -1 1 1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 50 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 75 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 -1) (list (make-c-chord 100 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 125 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 150 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 -1) (list (make-c-chord 200 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 225 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 250 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 -1 1 1) (list (make-c-chord 300 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 350 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 375 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 -1 1 -1) (list (make-c-chord 400 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 450 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 -1) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 525 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 550 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 600 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 625 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 650 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 675 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 -1 1 -1) (list (make-c-chord 700 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 750 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))))) (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 -1 -1 -1) (list)) (beat-constructor 1 '(-1 -1 1 -1) (list (make-c-chord 150 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 -1) (list)) (beat-constructor 1 '(1 -1 -1 -1) (list (make-c-chord 300 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 -1 1 -1) (list (make-c-chord 450 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 -1) (list)) (beat-constructor 1 '(1 -1 -1 -1) (list (make-c-chord 600 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 -1) (list)))))) (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 -1 -1 -1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1 -1) (list (make-c-chord 125 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 1 -1) (list (make-c-chord 250 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 1) (list (make-c-chord 375 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 -1 -1 -1) (list)) (beat-constructor 1 '(1 -1 -1 -1) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1 -1) (list (make-c-chord 625 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 1 -1) (list (make-c-chord 750 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))))) (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 1 -1 -1) (list (make-c-chord 25 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 1) (list (make-c-chord 175 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 1) (list (make-c-chord 275 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1 -1) (list (make-c-chord 325 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 1 -1 1) (list (make-c-chord 425 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 475 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 1) (list (make-c-chord 575 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 -1 -1) (list)) (beat-constructor 1 '(-1 1 -1 -1) (list (make-c-chord 725 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil)))))))))) nil)) (sbox 'c-patch-score-voice 'rtm "rtm" nil 14811150 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 60) nil (list '(327685 8192620 0 1 65 10 4915810 7 50 20 13/20 3276810 8520320 "rtm") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 0 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 25 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 50 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 75 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 100 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 125 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 150 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 175 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 200 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 225 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 250 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 275 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 300 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 325 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 350 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 375 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 60 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 400 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 425 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 450 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 475 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 500 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 525 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 550 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 575 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 600 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 625 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 650 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 675 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1 1 1) (list (make-c-chord 700 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 725 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 750 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))) (make-c-chord 775 (list (make-c-note 6000 35 nil 25 100 1 nil 0 0 nil))))))))) t)) (sbox 'c-pw-resize-x 'const "const" nil 15859824 (list "(uu x12 c5 cuu)") 2228347) (sbox 'c-patch '|repmus|::crible-rtm "crible-rtm" nil 18677773 (list "nil" "uu" 5)) (sbox 'c-pw-resize-x 'const "const" nil 18612334 (list "(c2 c3 c5 uu cuu )") 2228347)) (list (list 0 0 3) (list 1 0 4) (list 9 0 7) (list 11 0 14) (list 14 0 12) (list 14 1 15)) t)