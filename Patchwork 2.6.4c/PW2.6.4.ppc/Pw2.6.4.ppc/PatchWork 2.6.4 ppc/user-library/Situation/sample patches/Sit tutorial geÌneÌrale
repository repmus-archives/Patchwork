(in-package :pw)(make-win 'c-pw-window "Sit tutorial générale" 3276803 46465570 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 35717250 (list "4 solutions of an 8 queens instance of the problem") 5046365) (sbox 'c-funarg-input 'parameter "parameter" nil 3342519 (list 1)) (sbox 'c-patch 'get-slot "get-slot" nil 6619270 (list "()" "i1")) (sbox 'c-patch 'get-slot "get-slot" nil 6619378 (list "()" "i2")) (sbox 'c-patch 'get-slot "get-slot" nil 6619472 (list "()" "item1")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 65534 (list "N queens problem") 2752640) (sbox 'c-pw-functional 'hd-constraints::constraint "constraint" nil 27656409 (list "nil" 0 0 5)) (sbox 'c-patch 'g- "g-" nil 10879239 (list 0 34)) (sbox 'c-pw-resize-x 'g-abs "g-abs" nil 13435021 (list 0) 2228270) (sbox 'c-funarg-patch 'funarg "funarg" nil 24772834 (list "nil") nil '((list 'lambda '(common-lisp-user::var1) (list 'let (list (list '*global-calling-object* *global-clock*)) '(incf (clock *global-calling-object*)) (list 'hd-constraints::funct-and (list 'g-oper ''/= (list 'g-abs (list 'g- (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::item1) (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::item2))) (list 'g-abs (list 'g- (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::i1) (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::i2)))) (list 'g-oper ''/= (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::item2) (list 'get-slot 'common-lisp-user::var1 ''common-lisp-user::item1))))) nil)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 13172769 (list "two queens in rows i1 and i2 shouldn't be in the same diagonal") 5767260) (sbox 'c-pw-functional 'g-oper "g-oper" nil 16253058 (list "/=" "0" "nil")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 13435334 (list "two queens shouldn't be in the same column") 4718673) (sbox 'c-patch 'get-slot "get-slot" nil 6881715 (list "()" "item2")) (sbox 'c-patch 'hd-constraints::solve "solve" nil 27721822 (list 4 8 "((1 2 3))" "nil")) (sbox 'c-pw-functional 'g-oper "g-oper" nil 16449894 (list "/=" "0" "nil")) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 21168222 (list 1 1 8)) (sbox 'c-patch 'get-slot "get-slot" nil 2425155 (list "()" "other")) (sbox 'c-pw-functional 'list "list" nil 24838260 (list 0)) (sbox 'c-pw-resize-x 'g-abs "g-abs" nil 13631756 (list 0) 2228270) (sbox 'c-pw-functional 'hd-constraints::funct-and "funct-and" nil 21823706 (list "(1 2)" "(1 2)")) (sbox 'c-patch 'g- "g-" nil 10551432 (list 0 0)) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 917914 (list "slot \"other\" is not used") 3473489) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 25100609 (list "the only constraint, affecting all variable pairs ('all' entry in 'constraint' box). A predicate returning t if the two queens tested doesn't attack each other") 6160537) (sbox 'c-pw-functional 'mapcar "mapcar" nil 32178266 (list "second" "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 20709377 (list "Variable domain is the list representing queen's possible column positions") 7274580) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 43319517 (list "FIGURE 5") 2162786)) (list (list 2 0 1) (list 3 0 1) (list 4 0 1) (list 6 0 9) (list 7 0 4) (list 7 1 13) (list 8 0 21) (list 9 0 20) (list 11 1 19) (list 11 2 8) (list 13 0 1) (list 14 2 18) (list 14 3 6) (list 15 1 13) (list 15 2 4) (list 17 0 1) (list 18 0 16) (list 19 0 7) (list 20 0 11) (list 20 1 15) (list 21 0 2) (list 21 1 3) (list 24 1 14)) t)