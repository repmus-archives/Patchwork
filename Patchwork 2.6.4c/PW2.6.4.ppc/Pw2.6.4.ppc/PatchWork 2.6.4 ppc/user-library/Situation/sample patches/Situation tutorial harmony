(in-package :pw)(make-win 'c-pw-window "Situation tutorial harmony" 2686980 27001610 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 19398687 (list "figure 1") 2359371) (abst 'c-abstract-m 'user-abstraction::filt-int "filt-int" nil 2752645 (list "(1 2)" "(1 2)") '((common-lisp-user::filtre list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::inter list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list)))) 'nil (make-win 'c-pw-window "filt-int" 24379410 22741276 (list (sbox 'c-abstract-in 'absin "absin" t 200 (list "inter" 1)) (sbox 'c-abstract-in 'absin "absin" t 3342336 (list "filtre" 1)) (sbox 'c-enum-collect-source 'enum "accum" t 3211406 (list "(1 2)")) (sbox 'c-patch 'list-filter "list-filter" t 11862127 (list "=" 12 "(1 2)")) (sbox 'c-enum-collect-source 'enum "enum" t 6750330 (list "(1 2)")) (sbox 'c-reducer 'pwreduce "pwreduce" t 16318551 (list "foo" "(1 2)" "foo")) (sbox 'c-abstract-out 'absout "absout" nil 20512872 (list "filt-int"))) (list (list 2 0 0) (list 3 1 4) (list 3 2 2) (list 4 0 1) (list 5 0 2) (list 5 1 3) (list 5 2 4) (list 6 0 5)) nil)) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil 131105 (list "(0 (4 4 7 11) 7 (2 5 6 11) 15 (4 5 7 11))") 2228492) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 19071331 '(0) 2228270) (sbox 'c-pw-resize-x 'const "const" nil 5373956 (list "(not (or (ints 12 t) (* 2 2 *)(* 7 7 *)(* 11 11 *)))") 2228549) (sbox 'c-pw-resize-x 'const "const" nil 2818105 (list "(3)") 2228275) (sbox 'c-pw-functional 'hd-constraints::harmonic-constraints "harmonic-constraints" nil 7995662 (list 1 16 1 "(1)" "(1)" "nil" "nil" "nil" "nil" "nil" "nil" "nil" "nil" "nil" "nil" "nil" "nil")) (sbox 'c-pw-resize-x 'const "const" nil 8716759 (list "(0 15 ((2 1)(3 1)(4 2)(5 2)(6 2)(7 2)))") 2228492) (sbox 'c-pw-resize-x 'const "const" nil 14680540 (list "(0 11 (2) 12 15 (3))") 2228381) (sbox 'c-patch 'hd-constraints::construct-sols "construct-sols" nil 19529984 (list 0 "(1 2)")) (sbox 'c-pw-resize-x 'expand-lst "expand-lst" nil 3342793 (list "(0 3 (4 7 11) 4 11 (1_7 11) 12 15 (4 5 7 11))") 2228506) (sbox 'c-pw-resize-x 'const "const" nil 6095320 (list "(0 15 (not (7 4 4)))") 2228358) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil -65092 (list "(0 (3 3) 1 (3 4) 7 (7 7) 13 (3 5) 15 (3 4))") 2228523) (sbox 'c-pw-resize-x 'const "const" nil 8978434 (list "(57 61 72 (0))") 2228351) (sbox 'c-pw-resize-x 'expand-lst "expand-lst" nil 11600012 (list "(0 15 (2 8 t))") 2228334) (sbox 'c-pw-resize-x 'const "const" nil 15663190 (list "(0 11 (3) 12 15 (4))") 2228376) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil 2621667 (list "(0 (57 83) 7 (46 83) 15 (53 83))") 2228443) (sbox 'c-pw-resize-x 'const "const" nil 12386307 (list "(0 15 (not (7 7)))") 2228351) (sbox 'c-patch 'posn-match "posn-match" nil 22282496 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'const "const" nil 8323216 (list "(0 15 (7 t))") 2228325) (sbox 'c-pw-resize-x 'const "const" nil 12059082 (list "(0 15 (0 60 (not (* 11 *))) 7 8 (and (? 5 * 11 *)))") 2228541) (sbox 'c-patch-score-voice 'rtm "rtm" t 23265639 (list "(4 4)" "(1)" "(6000)" 120) nil (list '(327685 13107890 0 1 100 10 9831080 3 50 20 1 3276810 13435590 "RTM12") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1) (list (make-c-chord 0 (list (make-c-note 5700 33 nil 44 100 1 nil 0 0 nil) (make-c-note 6100 35 #\Y 44 100 1 nil 0 0 nil) (make-c-note 7200 42 nil 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 49 (list (make-c-note 6800 39 #\Y 45 100 1 nil 0 0 nil) (make-c-note 7500 43 #\Y 45 100 1 nil 0 0 nil) (make-c-note 7900 46 nil 45 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 99 (list (make-c-note 6100 35 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6500 38 nil 44 100 1 nil 0 0 nil) (make-c-note 7200 42 nil 44 100 1 nil 0 0 nil) (make-c-note 8300 48 nil 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 148 (list (make-c-note 5400 31 #\Y 45 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 45 100 1 nil 0 0 nil) (make-c-note 6900 40 nil 45 100 1 nil 0 0 nil) (make-c-note 7600 44 nil 45 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1) (list (make-c-chord 198 (list (make-c-note 5100 29 #\Y 44 100 1 nil 0 0 nil) (make-c-note 5600 32 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6100 35 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6700 39 nil 44 100 1 nil 0 0 nil) (make-c-note 7800 45 #\Y 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 247 (list (make-c-note 4900 28 #\Y 45 100 1 nil 0 0 nil) (make-c-note 5400 31 #\Y 45 100 1 nil 0 0 nil) (make-c-note 5900 34 nil 45 100 1 nil 0 0 nil) (make-c-note 6500 38 nil 45 100 1 nil 0 0 nil) (make-c-note 7600 44 nil 45 100 1 nil 0 0 nil) (make-c-note 8200 47 #\Y 45 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 297 (list (make-c-note 5600 32 #\Y 44 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6300 36 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6900 40 nil 44 100 1 nil 0 0 nil) (make-c-note 7100 41 nil 44 100 1 nil 0 0 nil) (make-c-note 7700 45 nil 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 346 (list (make-c-note 5000 29 nil 45 100 1 nil 0 0 nil) (make-c-note 5200 30 nil 45 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 45 100 1 nil 0 0 nil) (make-c-note 6300 36 #\Y 45 100 1 nil 0 0 nil) (make-c-note 6800 39 #\Y 45 100 1 nil 0 0 nil) (make-c-note 7900 46 nil 45 100 1 nil 0 0 nil) (make-c-note 8100 47 nil 45 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1) (list (make-c-chord 396 (list (make-c-note 4800 28 nil 44 100 1 nil 0 0 nil) (make-c-note 5000 29 nil 44 100 1 nil 0 0 nil) (make-c-note 5600 32 #\Y 44 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 44 100 1 nil 0 0 nil) (make-c-note 7500 43 #\Y 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 445 (list (make-c-note 5200 30 nil 45 100 1 nil 0 0 nil) (make-c-note 5400 31 #\Y 45 100 1 nil 0 0 nil) (make-c-note 5900 34 nil 45 100 1 nil 0 0 nil) (make-c-note 6500 38 nil 45 100 1 nil 0 0 nil) (make-c-note 6700 39 nil 45 100 1 nil 0 0 nil) (make-c-note 7300 42 #\Y 45 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 495 (list (make-c-note 5800 33 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6300 36 #\Y 44 100 1 nil 0 0 nil) (make-c-note 6900 40 nil 44 100 1 nil 0 0 nil) (make-c-note 7400 43 nil 44 100 1 nil 0 0 nil) (make-c-note 8000 46 #\Y 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 544 (list (make-c-note 6100 35 #\Y 45 100 1 nil 0 0 nil) (make-c-note 6700 39 nil 45 100 1 nil 0 0 nil) (make-c-note 7200 42 nil 45 100 1 nil 0 0 nil) (make-c-note 7800 45 #\Y 45 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1) (list (make-c-chord 594 (list (make-c-note 5700 33 nil 44 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 44 100 1 nil 0 0 nil) (make-c-note 7500 43 #\Y 44 100 1 nil 0 0 nil) (make-c-note 8200 47 #\Y 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 643 (list (make-c-note 6200 36 nil 45 100 1 nil 0 0 nil) (make-c-note 6600 38 #\Y 45 100 1 nil 0 0 nil) (make-c-note 7100 41 nil 45 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 693 (list (make-c-note 5500 32 nil 44 100 1 nil 0 0 nil) (make-c-note 6000 35 nil 44 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 44 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1) (list (make-c-chord 742 (list (make-c-note 5900 34 nil 45 100 1 nil 0 0 nil) (make-c-note 6300 36 #\Y 45 100 1 nil 0 0 nil) (make-c-note 6800 39 #\Y 45 100 1 nil 0 0 nil))))))))) nil))) (list (list 1 0 5) (list 1 1 2) (list 3 0 6) (list 6 2 16) (list 6 3 12) (list 6 4 1) (list 6 5 10) (list 6 6 4) (list 6 7 11) (list 6 8 19) (list 6 9 11) (list 6 10 13) (list 6 11 7) (list 6 12 14) (list 6 13 20) (list 6 14 17) (list 6 15 8) (list 6 16 15) (list 9 1 3) (list 18 0 9) (list 21 2 18)) t)