(in-package :pw)(make-win 'c-pw-window "Situation tutorial rhythm" 6029374 30671439 (list (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 9568742 (list "Chords coming from harmonic constraints box") 4391000) (sbox 'c-pw-resize-x 'flat "flat" nil 26214601 (list "(1 2)") 2228270) (sbox 'c-pw-resize-x 'hd-constraints::total-notes "total-notes" nil 12124492 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'list "list" nil 25886995 (list 0)) (sbox 'c-pw-resize-x 'const "const" nil 786770 (list "(1/2 1/3 1/5)") 2228323) (make-instance 'c-pw-lispfun :view-position 14221709 :view-size 3276884 :active-mode nil :pw-function 'subseq :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "sequence" :type-list 'nil) (make-instance 'c-ttybox :view-position 327723 :view-size 917540 :dialog-item-text "0" :doc-string "start" :type-list 'nil) (make-instance 'c-ttybox :view-position 1376261 :view-size 917540 :dialog-item-text "0" :doc-string "end" :type-list 'nil))) (sbox 'c-pw-resize-x 'flat "flat" nil 7340231 (list "(1 2)") 2228270) (sbox 'c-patch 'hd-constraints::notes-per-group "notes-per-group" nil 22741071 (list "(1 2)" "(4)")) (sbox 'c-patch 'hd-constraints::rhythm-constraints "rhythm-constraints" nil 524433 (list 1 6 "(4)" "(1/2 1/4)")) (sbox 'c-patch 'hd-constraints::notes-per-unit "notes-per-unit" nil 16842789 (list "(1 2)" "(1 2)")) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil 10354818 (list "(0 (2 3) 6 (5 6) 7 (12 18))") 2228399) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 4194503 '(0) 2228270) (sbox 'c-pw-resize-x 'expand-lst "expand-lst" nil 65541 (list "(7* 4)") 2228358) (sbox 'c-pw-resize-x 'first "first" nil 7274921 (list "(1 2)") 2228270) (sbox 'c-patch-score-voice 'rtm "rtm" t 21758350 (list "(4 4)" "((4 (1 1 1 1)))" "(6000)" 120) nil (list '(327685 35062468 0 3 100 10 31785658 3 50 20 1 3276810 35390168 "RTM16") (make-instance 'c-measure-line :measures (list (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 -1 -1 -1) (list (make-c-chord 0 (list (make-c-note 2400 14 nil 9 100 1 nil 0 0 nil) (make-c-note 3100 18 nil 9 100 1 nil 0 0 nil) (make-c-note 4200 24 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 10 (list (make-c-note 3100 18 nil 9 100 1 nil 0 0 nil) (make-c-note 3300 19 nil 9 100 1 nil 0 0 nil) (make-c-note 4400 25 #\Y 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1 -1 -1) (list (make-c-chord 60 (list (make-c-note 3300 19 nil 9 100 1 nil 0 0 nil) (make-c-note 4000 23 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1) (list)) (beat-constructor 1 '(1 1 1 -1 -1) (list (make-c-chord 150 (list (make-c-note 2900 17 nil 9 100 1 nil 0 0 nil) (make-c-note 3600 21 nil 9 100 1 nil 0 0 nil) (make-c-note 3800 22 nil 9 100 1 nil 0 0 nil))) (make-c-chord 160 (list (make-c-note 2700 15 #\Y 9 100 1 nil 0 0 nil) (make-c-note 3400 19 #\Y 9 100 1 nil 0 0 nil) (make-c-note 4500 26 nil 9 100 1 nil 0 0 nil))) (make-c-chord 170 (list (make-c-note 3800 22 nil 9 100 1 nil 0 0 nil) (make-c-note 4900 28 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5600 32 #\Y 9 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 -1) (list)) (beat-constructor 1 '(1 -1 -1 1 1) (list (make-c-chord 250 (list (make-c-note 4800 28 nil 9 100 1 nil 0 0 nil) (make-c-note 5500 32 nil 9 100 1 nil 0 0 nil) (make-c-note 6600 38 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 280 (list (make-c-note 5500 32 nil 9 100 1 nil 0 0 nil) (make-c-note 5700 33 nil 9 100 1 nil 0 0 nil) (make-c-note 6800 39 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 290 (list (make-c-note 5700 33 nil 9 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 -1 -1 1 1) (list (make-c-chord 300 (list (make-c-note 5300 31 nil 9 100 1 nil 0 0 nil) (make-c-note 6000 35 nil 9 100 1 nil 0 0 nil) (make-c-note 6200 36 nil 9 100 1 nil 0 0 nil))) (make-c-chord 330 (list (make-c-note 5100 29 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 9 100 1 nil 0 0 nil) (make-c-note 6900 40 nil 9 100 1 nil 0 0 nil))) (make-c-chord 340 (list (make-c-note 3000 17 #\Y 9 100 1 nil 0 0 nil) (make-c-note 4100 24 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1) (list)))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1 -1 1 -1) (list (make-c-chord 400 (list (make-c-note 2400 14 nil 9 100 1 nil 0 0 nil) (make-c-note 3100 18 nil 9 100 1 nil 0 0 nil) (make-c-note 4200 24 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 410 (list (make-c-note 3100 18 nil 9 100 1 nil 0 0 nil) (make-c-note 3300 19 nil 9 100 1 nil 0 0 nil) (make-c-note 4400 25 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 430 (list (make-c-note 3300 19 nil 9 100 1 nil 0 0 nil) (make-c-note 4000 23 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 1) (list (make-c-chord 466 (list (make-c-note 2900 17 nil 15 100 1 nil 0 0 nil) (make-c-note 3600 21 nil 15 100 1 nil 0 0 nil) (make-c-note 3800 22 nil 15 100 1 nil 0 0 nil))) (make-c-chord 483 (list (make-c-note 2700 15 #\Y 15 100 1 nil 0 0 nil) (make-c-note 3400 19 #\Y 15 100 1 nil 0 0 nil) (make-c-note 4500 26 nil 15 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1) (list)) (beat-constructor 1 '(1 1 1 1 1) (list (make-c-chord 550 (list (make-c-note 3800 22 nil 9 100 1 nil 0 0 nil) (make-c-note 4900 28 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5600 32 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 560 (list (make-c-note 4800 28 nil 9 100 1 nil 0 0 nil) (make-c-note 5500 32 nil 9 100 1 nil 0 0 nil) (make-c-note 6600 38 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 570 (list (make-c-note 5500 32 nil 9 100 1 nil 0 0 nil) (make-c-note 5700 33 nil 9 100 1 nil 0 0 nil) (make-c-note 6800 39 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 580 (list (make-c-note 5700 33 nil 9 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 9 100 1 nil 0 0 nil))) (make-c-chord 590 (list (make-c-note 4900 28 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5100 29 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 9 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1) (list (make-c-chord 600 (list (make-c-note 5600 32 #\Y 22 100 1 nil 0 0 nil) (make-c-note 6000 35 nil 22 100 1 nil 0 0 nil))) (make-c-chord 625 (list (make-c-note 5800 33 #\Y 22 100 1 nil 0 0 nil) (make-c-note 6200 36 nil 22 100 1 nil 0 0 nil) (make-c-note 6400 37 nil 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 1 1 -1) (list (make-c-chord 660 (list (make-c-note 4700 27 nil 9 100 1 nil 0 0 nil) (make-c-note 4900 28 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5300 31 nil 9 100 1 nil 0 0 nil))) (make-c-chord 670 (list (make-c-note 4900 28 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5100 29 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5500 32 nil 9 100 1 nil 0 0 nil))) (make-c-chord 680 (list (make-c-note 4200 24 #\Y 9 100 1 nil 0 0 nil) (make-c-note 5300 31 nil 9 100 1 nil 0 0 nil) (make-c-note 5700 33 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1) (list (make-c-chord 725 (list (make-c-note 3800 22 nil 22 100 1 nil 0 0 nil) (make-c-note 4200 24 #\Y 22 100 1 nil 0 0 nil) (make-c-note 4600 26 #\Y 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1) (list (make-c-chord 750 (list (make-c-note 3100 18 nil 22 100 1 nil 0 0 nil) (make-c-note 3300 19 nil 22 100 1 nil 0 0 nil) (make-c-note 4400 25 #\Y 22 100 1 nil 0 0 nil))) (make-c-chord 775 (list (make-c-note 3300 19 nil 22 100 1 nil 0 0 nil) (make-c-note 4000 23 nil 22 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 1) (list (make-c-chord 800 (list (make-c-note 2900 17 nil 22 100 1 nil 0 0 nil) (make-c-note 3600 21 nil 22 100 1 nil 0 0 nil))) (make-c-chord 825 (list (make-c-note 6200 36 nil 22 100 1 nil 0 0 nil) (make-c-note 7300 42 #\Y 22 100 1 nil 0 0 nil) (make-c-note 8000 46 #\Y 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 -1 1 -1 1) (list (make-c-chord 870 (list (make-c-note 7300 42 #\Y 9 100 1 nil 0 0 nil) (make-c-note 7500 43 #\Y 9 100 1 nil 0 0 nil) (make-c-note 8200 47 #\Y 9 100 1 nil 0 0 nil))) (make-c-chord 890 (list (make-c-note 8000 46 #\Y 9 100 1 nil 0 0 nil) (make-c-note 8400 49 nil 9 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1) (list (make-c-chord 925 (list (make-c-note 8200 47 #\Y 22 100 1 nil 0 0 nil) (make-c-note 8600 50 nil 22 100 1 nil 0 0 nil) (make-c-note 8800 51 nil 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 1) (list (make-c-chord 950 (list (make-c-note 7100 41 nil 22 100 1 nil 0 0 nil) (make-c-note 7300 42 #\Y 22 100 1 nil 0 0 nil) (make-c-note 7700 45 nil 22 100 1 nil 0 0 nil))) (make-c-chord 975 (list (make-c-note 2700 15 #\Y 22 100 1 nil 0 0 nil) (make-c-note 3800 22 nil 22 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(1 -1) (list (make-c-chord 1000 (list (make-c-note 1600 9 nil 22 100 1 nil 0 0 nil) (make-c-note 2700 15 #\Y 22 100 1 nil 0 0 nil) (make-c-note 3100 18 nil 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 -1) (list (make-c-chord 1050 (list (make-c-note 2000 11 #\Y 22 100 1 nil 0 0 nil) (make-c-note 2200 12 #\Y 22 100 1 nil 0 0 nil) (make-c-note 2400 14 nil 22 100 1 nil 0 0 nil))))) (beat-constructor 1 '(1 -1 1) (list (make-c-chord 1100 (list (make-c-note 7300 42 #\Y 15 100 1 nil 0 0 nil) (make-c-note 7500 43 #\Y 15 100 1 nil 0 0 nil) (make-c-note 7900 46 nil 15 100 1 nil 0 0 nil))) (make-c-chord 1133 (list (make-c-note 6600 38 #\Y 15 100 1 nil 0 0 nil) (make-c-note 7700 45 nil 15 100 1 nil 0 0 nil) (make-c-note 8100 47 nil 15 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1) (list (make-c-chord 1166 (list (make-c-note 5300 31 nil 15 100 1 nil 0 0 nil) (make-c-note 6000 35 nil 15 100 1 nil 0 0 nil) (make-c-note 6200 36 nil 15 100 1 nil 0 0 nil))))))) (make-instance 'c-measure :low "4" :metronome 120 :metronome-unit 4 :beat-objects (list (beat-constructor 1 '(-1 1 -1) (list (make-c-chord 1216 (list (make-c-note 5100 29 #\Y 15 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 15 100 1 nil 0 0 nil) (make-c-note 6900 40 nil 15 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1) (list (make-c-chord 1266 (list (make-c-note 4900 28 #\Y 15 100 1 nil 0 0 nil) (make-c-note 5100 29 #\Y 15 100 1 nil 0 0 nil) (make-c-note 5800 33 #\Y 15 100 1 nil 0 0 nil))))) (beat-constructor 1 '(-1 1 -1) (list (make-c-chord 1316 (list (make-c-note 5600 32 #\Y 15 100 1 nil 0 0 nil) (make-c-note 6000 35 nil 15 100 1 nil 0 0 nil))))))))) t)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 13107252 '(0) 2228270) (sbox 'c-pw-resize-x 'flat "flat" nil 20578509 (list "(1 2)") 2228270) (sbox 'c-pw-resize-x 'first "first" nil 15008083 (list "(1 2)") 2228270) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 19398713 '(0) 2228270) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 25624674 '(0) 2228270) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil 17825925 (list "(0 (3) 6 (5) 7 (5))") 2228359) (sbox 'c-patch 'hd-constraints::dist-into-units "dist-into-units" nil 7733319 (list "(1 2)" "(1 2)")) (sbox 'c-patch 'hd-constraints::groups-per-unit "groups-per-unit" nil 10485790 (list "(1 2)" "(1 2)")) (sbox 'c-pw-resize-x 'hd-constraints::interval-interp "interval-interp" nil 13893744 (list "(0 (4 7) 6 (12 18) 7 (12 18))") 2228412) (sbox 'c-patch 'hd-constraints::construct-rhythm "construct-rhythm" nil 6619464 (list "(1 2)")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 26214756 (list "figure 4") 1966159) (sbox 'c-pw-resize-x 'const "const" nil 11141516 (list "((2400 3100 4200) (3100 3300 4400) (3300 4000) (2900 3600 3800) (2700 3400 4500) (3800 4900 5600)         (4800 5500 6600) (5500 5700 6800) (5700 6400) (5300 6000 6200) (5100 5800 6900) (3000 4100)         (2400 3100 4200) (3100 3300 4400) (3300 4000) (2900 3600 3800) (2700 3400 4500) (3800 4900 5600)         (4800 5500 6600) (5500 5700 6800) (5700 6400) (4900 5100 5800) (5600 6000) (5800 6200 6400)         (4700 4900 5300) (4900 5100 5500) (4200 5300 5700) (3800 4200 4600) (3100 3300 4400) (3300 4000)         (2900 3600) (6200 7300 8000) (7300 7500 8200) (8000 8400) (8200 8600 8800) (7100 7300 7700) (2700 3800)         (1600 2700 3100) (2000 2200 2400) (7300 7500 7900) (6600 7700 8100) (5300 6000 6200) (5100 5800 6900)         (4900 5100 5800) (5600 6000) (5800 6200 6400) (6600 7700 8100 8500) (6200 7300 7700 8100) (6900 7300 7700 8400 8800) (6200 7300 7700 8400)       (5800 6900 7300 7700 8800) (6200 7300 7700 8400) (5800 6500 6900 7300 8000) (5400 6500 6900 8000 9100)       (6500 6900 7300 8000 8700) (5400 5800 6500 7200 8300) (5800 6200 6900 7600) (5400 6100 7200 8300)       (5800 6200 6900 7600) (5400 6500 7200 8300) (6500 6900 7600 8700) (6100 6500 7200 8300)       (5000 5700 6800 7900) (5700 6200 6700 7500) (5000 5800 6300 7100) (3900 4800 5400 6700)       (4300 5300 6000 7000) (4100 5600 6400 7500) (4400 5300 7000) (4100 5500 7300) (3800 5800 7800))") 2228310)) (list (list 1 0 19) (list 2 0 3) (list 3 0 1) (list 5 0 26) (list 5 2 17) (list 6 0 11) (list 7 0 18) (list 7 1 16) (list 8 2 12) (list 8 3 4) (list 9 0 15) (list 9 1 23) (list 11 0 8) (list 13 0 24) (list 14 1 13) (list 14 2 5) (list 15 0 22) (list 16 0 20) (list 17 0 2) (list 18 0 9) (list 19 0 7) (list 21 0 12) (list 21 1 6) (list 22 0 21) (list 22 1 10) (list 24 0 3)) t)