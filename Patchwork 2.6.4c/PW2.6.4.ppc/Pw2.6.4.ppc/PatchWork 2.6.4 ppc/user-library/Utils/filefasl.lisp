(in-package "PW");; this is useful in order to force recompiling; when porting patchwork between various machine with different directory(defun compile-file-again (file)  "Compiles <file> even if not needed"  (let* ((infile (merge-pathnames file "*.Lisp"))         (outfile (compile-file-pathname infile)))    (unless (probe-file outfile)      (compile-file infile :output-file outfile :verbose t) )));; updating the whole environment(defun pw-update-all ()  (mapc #'compile-file-again  (list*  "PW:PW-Music;Load+Update;Music-package"  "PW:PW-Load+Update;PW-kernel-package"  (append PW::*PW-Music-files*           epw::*EPW-files*          PW::*PW-kernel-files*))));;(update-all);; prints all fasl files in al PW subdirectories(defun pw-fasl-files ()(directory (concatenate 'string (mac-namestring "PW:")                         "**:*.fasl")));; deletes all fasl files in all PW subdirectories(defun pw-fasl-delete (dir)(when dir (mapc #'delete-file (directory (concatenate 'string (ccl:mac-namestring dir)                         "**:*.fasl")))));; (fasl-delete)(defun compile-dir (dir)(when dir  (mapc #'|CLPF-Util|:compile-file? (mapcar #'ccl::mac-namestring (directory (concatenate 'string dir                         "**:*.lisp"))))))#|(mapc #'(lambda (x) (progn                       (ccl:set-mac-file-type x "FASL")                      (format t "set ~S to type lib~%" x)))      (list-files "PW-LIB:Esquisse" "lib" ))|#