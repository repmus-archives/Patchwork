(in-package :pw)(make-win 'c-pw-window "markov3" 2490418 20578868 (list (sbox 'c-patch-polifmn-mod 'multiseq "multiseq" nil 14942335 (list "obj" "obj" "obj") nil (list nil nil (list 32310383 1.0 3))) (sbox 'c-pw-resize-x 'const "protus" nil 4 (list "(6000  6200 6400 6500 6700 6900 7100 7200)") 2228493) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 131355 (list "Simulation d'une séquence en PROTUS mediéval") 1900842) (sbox 'c-patch 'g- "g-" nil 6095056 (list 0 1200)) (abst 'c-abstract-m 'user-abstraction::markov1440 "markov1" nil 9502926 (list "(1 2)" 100 40 2) '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::vit epw::numbers? (:view-size 917540 :value 50 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::n-notes fix/float (:view-size 917540 :value 41 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (common-lisp-user::chans midic (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list)))) 'nil (make-win 'c-pw-window "markov1" 5374009 25887271 (list (sbox 'c-abstract-in 'absin "absin" t 19726786 (list "chans" 4)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 18808871 '(0) 2228270) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 475 (list "()") nil (list '((0 0 0.44 0 0.44 0.44) (0.5 0 0 0 0 0) (0 1 0 1 0 0) (0 0 0.43 0 0.43 0.43) (0.5 0 0 0 0 0) (0 0 0.13 0 0.13 0.13)) "lst-ed")) (sbox 'c-patch 'alea:markov2 "markov2" nil 5177811 (list "(1 2)" 1 20)) (sbox 'c-patch 'alea:markov2 "markov2" nil 9306164 (list "(1 2)" 2 20)) (sbox 'c-patch 'posn-match "posn-match" nil 21234017 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'const "const" nil 7667889 (list "(.33 .33 .33 .66 .66 1)") 2228384) (sbox 'c-patch 'g+ "g+" nil 22544492 (list 0 10)) (sbox 'c-patch 'posn-match "posn-match" nil 15728654 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 2556381 (list "((1 2))") 2228270) (sbox 'c-patch 'g* "g*" nil 16646328 (list 0 50)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 6291520 (list "((1 2))") 2228270) (sbox 'c-patch 'g- "g-" nil 12976186 (list 0 1)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 459046 (list 41) 2228270) (sbox 'c-pw-resize-x 'const "const" nil 16056605 (list "(110 75 75 100 75 110)") 2228388) (sbox 'c-patch 'g- "g-" nil 9044422 (list 0 1)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 12059086 '(0) 2228270) (sbox 'c-patch-chord-line:c-patch-chord-line 'chord-seqn "chord-seqn" nil 21102801 (list 6000 100 75 100 0 1) nil (list nil nil)) (sbox 'c-patch 'posn-match "posn-match" nil 11141297 (list "(1 2)" 0)) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 3604548 (list "()") nil (list '((0.19 0.19 0.07 0.02 0.01 0.01 0 0) (0.54 0.4 0.48 0.1 0.04 0.03 0 0) (0.1 0.16 0.05 0.31 0.08 0.01 0 0) (0.15 0.15 0.31 0.19 0.35 0.12 0 0) (0.02 0.04 0.09 0.33 0.15 0.41 0.25 0.2) (0 0.05 0 0.05 0.33 0.22 0.45 0.32) (0 0 0 0 0.02 0.04 0 0.17) (0 0 0 0 0.02 0.16 0.3 0.31)) "lst-ed")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3539060 (list "<<--matrice des probabilités de transition pour les hauteurs") 2031822) (sbox 'c-abstract-out 'absout "absout" nil 23658958 (list "markov1")) (sbox 'c-abstract-in 'absin "absin" nil 655373 (list "list" 1)) (sbox 'c-abstract-in 'absin "absin" nil 11403547 (list "vit" 2)) (sbox 'c-abstract-in 'absin "absin" nil 262319 (list "n-notes" 3))) (list (list 1 0 8) (list 3 0 9) (list 3 2 13) (list 4 0 11) (list 4 2 13) (list 5 0 14) (list 5 1 16) (list 7 0 10) (list 8 0 22) (list 8 1 12) (list 9 0 2) (list 10 0 18) (list 10 1 23) (list 11 0 19) (list 12 0 4) (list 13 0 24) (list 15 0 3) (list 16 0 15) (list 17 0 1) (list 17 1 10) (list 17 2 7) (list 17 3 5) (list 17 5 0) (list 18 0 6) (list 18 1 16) (list 21 0 17)) nil)) (abst 'c-abstract-m 'user-abstraction::markov1440 "markov1" nil 9502789 (list "(1 2)" 50 80 1) '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::vit epw::numbers? (:view-size 917540 :value 50 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::n-notes fix/float (:view-size 917540 :value 41 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (common-lisp-user::chans midic (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list)))) 'nil (make-win 'c-pw-window "markov1" 5374009 25887271 (list (sbox 'c-abstract-in 'absin "absin" t 19726786 (list "chans" 4)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 18808871 '(0) 2228270) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 475 (list "()") nil (list '((0 0 0.44 0 0.44 0.44) (0.5 0 0 0 0 0) (0 1 0 1 0 0) (0 0 0.43 0 0.43 0.43) (0.5 0 0 0 0 0) (0 0 0.13 0 0.13 0.13)) "lst-ed")) (sbox 'c-patch 'alea:markov2 "markov2" nil 5177811 (list "(1 2)" 1 20)) (sbox 'c-patch 'alea:markov2 "markov2" nil 9306164 (list "(1 2)" 2 20)) (sbox 'c-patch 'posn-match "posn-match" nil 21234017 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'const "const" nil 7667889 (list "(.33 .33 .33 .66 .66 1)") 2228384) (sbox 'c-patch 'g+ "g+" nil 22544492 (list 0 10)) (sbox 'c-patch 'posn-match "posn-match" nil 15728654 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 2556381 (list "((1 2))") 2228270) (sbox 'c-patch 'g* "g*" nil 16646328 (list 0 50)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 6291520 (list "((1 2))") 2228270) (sbox 'c-patch 'g- "g-" nil 12976186 (list 0 1)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 459046 (list 41) 2228270) (sbox 'c-pw-resize-x 'const "const" nil 16056605 (list "(110 75 75 100 75 110)") 2228388) (sbox 'c-patch 'g- "g-" nil 9044422 (list 0 1)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 12059086 '(0) 2228270) (sbox 'c-patch-chord-line:c-patch-chord-line 'chord-seqn "chord-seqn" nil 21102801 (list 6000 100 75 100 0 1) nil (list nil nil)) (sbox 'c-patch 'posn-match "posn-match" nil 11141297 (list "(1 2)" 0)) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 3604548 (list "()") nil (list '((0.19 0.19 0.07 0.02 0.01 0.01 0 0) (0.54 0.4 0.48 0.1 0.04 0.03 0 0) (0.1 0.16 0.05 0.31 0.08 0.01 0 0) (0.15 0.15 0.31 0.19 0.35 0.12 0 0) (0.02 0.04 0.09 0.33 0.15 0.41 0.25 0.2) (0 0.05 0 0.05 0.33 0.22 0.45 0.32) (0 0 0 0 0.02 0.04 0 0.17) (0 0 0 0 0.02 0.16 0.3 0.31)) "lst-ed")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3539060 (list "<<--matrice des probabilités de transition pour les hauteurs") 2031822) (sbox 'c-abstract-out 'absout "absout" nil 23658958 (list "markov1")) (sbox 'c-abstract-in 'absin "absin" nil 655373 (list "list" 1)) (sbox 'c-abstract-in 'absin "absin" nil 11403547 (list "vit" 2)) (sbox 'c-abstract-in 'absin "absin" nil 262319 (list "n-notes" 3))) (list (list 1 0 8) (list 3 0 9) (list 3 2 13) (list 4 0 11) (list 4 2 13) (list 5 0 14) (list 5 1 16) (list 7 0 10) (list 8 0 22) (list 8 1 12) (list 9 0 2) (list 10 0 18) (list 10 1 23) (list 11 0 19) (list 12 0 4) (list 13 0 24) (list 15 0 3) (list 16 0 15) (list 17 0 1) (list 17 1 10) (list 17 2 7) (list 17 3 5) (list 17 5 0) (list 18 0 6) (list 18 1 16) (list 21 0 17)) nil)) (abst 'c-abstract-m 'user-abstraction::markov1440 "markov1" nil 10486088 (list "(1 2)" 200 20 3) '((list list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list (list))) (common-lisp-user::vit epw::numbers? (:view-size 917540 :value 50 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list))) (common-lisp-user::n-notes fix/float (:view-size 917540 :value 41 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float))) (common-lisp-user::chans midic (:view-size 917540 :value 1 :min-val 0 :max-val 12700 :doc-string "midic" :type-list (fixnum list)))) 'nil (make-win 'c-pw-window "markov1" 5374009 25887271 (list (sbox 'c-abstract-in 'absin "absin" t 19726786 (list "chans" 4)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 18808871 '(0) 2228270) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 475 (list "()") nil (list '((0 0 0.44 0 0.44 0.44) (0.5 0 0 0 0 0) (0 1 0 1 0 0) (0 0 0.43 0 0.43 0.43) (0.5 0 0 0 0 0) (0 0 0.13 0 0.13 0.13)) "lst-ed")) (sbox 'c-patch 'alea:markov2 "markov2" nil 5177811 (list "(1 2)" 1 20)) (sbox 'c-patch 'alea:markov2 "markov2" nil 9306164 (list "(1 2)" 2 20)) (sbox 'c-patch 'posn-match "posn-match" nil 21234017 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'const "const" nil 7667889 (list "(.33 .33 .33 .66 .66 1)") 2228384) (sbox 'c-patch 'g+ "g+" nil 22544492 (list 0 10)) (sbox 'c-patch 'posn-match "posn-match" nil 15728654 (list "(1 2)" 0)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 2556381 (list "((1 2))") 2228270) (sbox 'c-patch 'g* "g*" nil 16646328 (list 0 50)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 6291520 (list "((1 2))") 2228270) (sbox 'c-patch 'g- "g-" nil 12976186 (list 0 1)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 459046 (list 41) 2228270) (sbox 'c-pw-resize-x 'const "const" nil 16056605 (list "(110 75 75 100 75 110)") 2228388) (sbox 'c-patch 'g- "g-" nil 9044422 (list 0 1)) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 12059086 '(0) 2228270) (sbox 'c-patch-chord-line:c-patch-chord-line 'chord-seqn "chord-seqn" nil 21102801 (list 6000 100 75 100 0 1) nil (list nil nil)) (sbox 'c-patch 'posn-match "posn-match" nil 11141297 (list "(1 2)" 0)) (sbox 'c-patch-list-editor:c-patch-list-editor 'lst-ed "lst-ed" nil 3604548 (list "()") nil (list '((0.19 0.19 0.07 0.02 0.01 0.01 0 0) (0.54 0.4 0.48 0.1 0.04 0.03 0 0) (0.1 0.16 0.05 0.31 0.08 0.01 0 0) (0.15 0.15 0.31 0.19 0.35 0.12 0 0) (0.02 0.04 0.09 0.33 0.15 0.41 0.25 0.2) (0 0.05 0 0.05 0.33 0.22 0.45 0.32) (0 0 0 0 0.02 0.04 0 0.17) (0 0 0 0 0.02 0.16 0.3 0.31)) "lst-ed")) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 3539060 (list "<<--matrice des probabilités de transition pour les hauteurs") 2031822) (sbox 'c-abstract-out 'absout "absout" nil 23658958 (list "markov1")) (sbox 'c-abstract-in 'absin "absin" nil 655373 (list "list" 1)) (sbox 'c-abstract-in 'absin "absin" nil 11403547 (list "vit" 2)) (sbox 'c-abstract-in 'absin "absin" nil 262319 (list "n-notes" 3))) (list (list 1 0 8) (list 3 0 9) (list 3 2 13) (list 4 0 11) (list 4 2 13) (list 5 0 14) (list 5 1 16) (list 7 0 10) (list 8 0 22) (list 8 1 12) (list 9 0 2) (list 10 0 18) (list 10 1 23) (list 11 0 19) (list 12 0 4) (list 13 0 24) (list 15 0 3) (list 16 0 15) (list 17 0 1) (list 17 1 10) (list 17 2 7) (list 17 3 5) (list 17 5 0) (list 18 0 6) (list 18 1 16) (list 21 0 17)) nil)) (sbox 'c-patch 'g- "g-" nil 6488390 (list 0 2400)) (sbox 'c-patch-polifmn-mod 'multiseq "multiseq" nil 15859984 (list "obj" "obj") nil (list nil nil (list 22938515 1.0 2))) (sbox 'c-pw-resize-x 'const "dobre" nil 2752521 (list "(6000  6200 6400 6600 6700 6900 7100 7200)") 2228507)) (list (list 0 0 5) (list 0 1 4) (list 0 2 6) (list 3 0 9) (list 4 0 3) (list 5 0 9) (list 6 0 7) (list 7 0 9) (list 8 0 5) (list 8 1 6)) t)