(in-package "ALEA")(ccl::export '(kaos kaos1 kaos2))(defunp kaos ((seed fix/float) (lambda fix/float) (long fix>0)) list"Génère une séquence de longueur <long> fondée sur l'équation logistique  yn = xn-1 * lambda * (1 - xn-1) (connue aussi comme 'l'équation du CHAOS') où <lambda> est un paramètre qui définie  la 'turbulence' des valeurs générés. <seed> est une valeure initiale entre zéro et un .   "(let ((res) (xn seed))  (dotimes (n long res) (setf res (cons (setf xn (* lambda xn (- 1 xn))) res)))  (reverse res)))(pw::defunp kaos1 ((seed fix/float) (lambda fix/float) (gamma fix/float) (long fix>0)) list"Génère une séquence de longueur <long> fondée sur une variation de l'équation logistique  yn = xn-1 * lambda - gamma *xn-1 ^2 (connue aussi comme 'l'équation du CHAOS') où <lambda> et <gamma>sont des paramètres qui définissent  la 'turbulence' des valeurs générés. <seed> est une valeure initiale entre zéro et un .   "(let ((res) (xn seed))  (dotimes (n long res) (setf res (cons (setf xn (- (* lambda xn) (* xn xn gamma))) res)))  (reverse res)))(pw::defunp kaos2 ((seed fix/float) (lambda numbers?) (long fix>0)) list"Génère une séquence de longueur <long> fondée sur l'équation logistique  yn = xn-1 * lambda * (1 - xn-1) (connue aussi comme 'l'équation du CHAOS') où <lambda> est une liste de  paramètres qui définissent  la 'turbulence' des valeurs générés. <seed> est une valeure initiale entre zéro et un .   "(let ((res) (xn seed))  (dotimes (n long res) (setf res (cons (setf xn (* (if (listp lambda) (nth n lambda) lambda) xn (- 1 xn))) res)))  (reverse res)))