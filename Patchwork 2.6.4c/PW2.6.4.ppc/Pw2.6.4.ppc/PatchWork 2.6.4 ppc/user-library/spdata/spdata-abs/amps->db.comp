(in-package :pw)(progn (setf (fdefinition 'user-comp-abstr::|amps->db|) (eval (list 'function (list 'lambda '(common-lisp-user::l1?0) (list 'mapcar (list 'make-num-fun ''(common-lisp-user::f (common-lisp-user::x) = (* 10 (+ 90 (max common-lisp-user::x -90))))) (list 'lin->db (list 'g/ 'common-lisp-user::l1?0 ''1000))))))) (setf (get 'user-comp-abstr::|amps->db| '*type-intypes*) '((&required (common-lisp-user::l1?0 epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) (&optional) (&rest))) (setf (get 'user-comp-abstr::|amps->db| '*type-outtype*) 'nil) (let ((box (make-pw-standard-box 'c-patch 'user-comp-abstr::|amps->db|))) (set-view-position box 15 15) (add-patch-box *active-patch-window* box)))