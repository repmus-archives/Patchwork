(in-package :pw)(make-win 'c-pw-window "all-abs" 2490418 12714365 (list (abst 'c-abstract-m 'user-abstraction::amps->db "amps->db" nil 7471366 (list 0) '((spdata::l1? epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "amps->dB" 8716443 13500718 (list (sbox 'c-pw-functional 'mapcar "mapcar" nil 9371733 (list "1+" "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 12058737 (list "amps->dB")) (sbox 'c-pw-resize-x 'lin->db "lin->db" nil 6553765 (list 1) 2228270) (sbox 'c-patch 'g/ "g/" nil 3932385 (list 0 1000)) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 3801093 (list "(f(x)= (* 10 (+ 90 (max x -90))))") 2228438) (sbox 'c-abstract-in 'absin "absin" nil 983169 (list "l1?" 1))) (list (list 0 0 4) (list 0 1 2) (list 1 0 0) (list 2 0 3) (list 3 0 5)) nil)) (abst 'c-abstract-m 'user-abstraction::->freqs-bpf "->freqs-bpf" nil 4653171 (list "(1 2)" 7000) '((common-lisp-user::const list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::fmax fix/float (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float)))) 'nil (make-win 'c-pw-window "->freqs-bpf" 2949166 27197845 (list (sbox 'c-abstract-in 'absin "absin" nil 262147 (list "spdata" 1)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 13304009 (list "((1 2))") 2228270) (sbox 'c-pw-resize-x 'flat "flat" nil 15859927 (list "(1 2)") 2228270) (sbox 'c-abstract-in 'absin "absin" nil 655677 (list "fmax" 2)) (sbox 'c-pw-functional 'g-round "g-round" nil 18415837 (list 0)) (sbox 'c-pw-resize-x 'const "const" nil 7471129 (list "(1 2)") 2228270) (sbox 'c-abstract-out 'absout "absout" nil 19530015 (list "->freqs-bpf")) (sbox 'c-pw-functional 'x-append "x-append" nil 19071111 (list "(0 0)" "(1 2)" "(1 2)")) (sbox 'c-patch 'g- "g-" nil 10617020 (list 0 0)) (sbox 'c-patch 'g+ "g+" nil 19398677 (list 0 0)) (sbox 'c-patch 'g* "g*" nil 7930038 (list 0 2)) (sbox 'c-pw-functional 'list "list" nil 7274800 (list 0)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 3932443 (list 0) 2228270) (sbox 'c-pw-functional 'list "list" nil 11403285 (list 0 0 0)) (sbox 'c-patch 'spdata:par-spdata "par-spdata" nil 4849788 (list "()" 2)) (sbox 'c-patch 'spdata:par-spdata "par-spdata" t 4063262 (list "()" 0)) (sbox 'c-patch 'spdata:filter-spdata "filter-spdata" nil 589983 (list "()" 1 0 1)) (sbox 'c-pw-resize-x 'const "const" nil 524388 (list "(1 2)") 2228270)) (list (list 1 0 13) (list 2 0 1) (list 4 0 2) (list 5 0 15) (list 6 0 7) (list 7 1 4) (list 7 2 11) (list 8 0 5) (list 8 1 10) (list 9 0 5) (list 9 1 10) (list 10 0 14) (list 11 0 12) (list 12 0 3) (list 13 0 8) (list 13 1 5) (list 13 2 9) (list 14 0 16) (list 15 0 16) (list 16 0 17) (list 16 2 12) (list 17 0 0)) nil)) (abst 'c-abstract-m 'user-abstraction::amps->db "amps->db" nil -9043648 (list 0) '((spdata::l1? epw::numbers? (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "amps->dB" 8716443 13500718 (list (sbox 'c-pw-functional 'mapcar "mapcar" nil 9371733 (list "1+" "(1 2)")) (sbox 'c-abstract-out 'absout "absout" nil 12058737 (list "amps->dB")) (sbox 'c-pw-resize-x 'lin->db "lin->db" nil 6553765 (list 1) 2228270) (sbox 'c-patch 'g/ "g/" nil 3932385 (list 0 1000)) (sbox 'c-pw-resize-x 'make-num-fun "make-num-fun" nil 3801093 (list "(f(x)= (* 10 (+ 90 (max x -90))))") 2228438) (sbox 'c-abstract-in 'absin "absin" nil 983169 (list "l1?" 1))) (list (list 0 0 4) (list 0 1 2) (list 1 0 0) (list 2 0 3) (list 3 0 5)) nil)) (abst 'c-abstract-m 'user-abstraction::->amps-bpf859 "->amps-bpf" nil 4653263 (list "(1 2)" 600) '((common-lisp-user::amps list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::ampmax common-lisp-user::nilnum (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "->amps-bpf" 3276810 23200347 (list (sbox 'c-patch 'g* "g*" nil 6619300 (list 0 0.001)) (sbox 'c-pw-resize-x 'const "const" nil 2490382 (list "(1 2)") 2228270) (sbox 'c-patch 'spdata:par-spdata "par-spdata" nil 4915207 (list "()" 1)) (sbox 'c-abstract-out 'absout "absout" nil 15401463 (list "->amps-bpf")) (sbox 'c-pw-resize-x 'const "const" nil 3932393 (list "\"warning !! : ampmax < max from amps:\"") 2228486) (sbox 'c-pw-resize-x 'flat "flat" nil 17170520 (list "(1 2)") 2228270) (sbox 'c-patch 'g* "g*" nil 2949234 (list 0 1000)) (sbox 'c-pw-functional 'list "list" nil 2228675 (list 0)) (sbox 'c-enum-collect-source 'enum "enum" nil 7536650 (list "(1 2)")) (sbox 'c-patch 'g* "g*" nil 19791989 (list 0 1000)) (sbox 'c-pw-resize-x 'const "const" nil 786797 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'x-append "x-append" nil 8782274 (list "(0 0 0)" "(0)" "(1 2)" "(0)")) (sbox 'c-pw-test 'test "test" nil 13500695 (list ">" 0 0 0 0)) (sbox 'c-pw-functional 'print "print" nil 6291789 (list 0)) (sbox 'c-abstract-in 'absin "absin" nil 459016 (list "ampmax" 2)) (sbox 'c-pw-functional 'print "print" nil 6291838 (list 0)) (sbox 'c-pw-functional 'list "list" nil 9371902 (list 0 0 0)) (sbox 'c-pw-resize-x 'first "first" nil 9503064 (list "(1 2)") 2228270) (sbox 'c-map-first 'pwmap "pwmap" nil 14680110 (list "foo" "(1 2)")) (sbox 'c-pw-resize-x 'g-max "g-max" nil 458852 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'x-append "x-append" nil 10551377 (list "(0)" "(1 2)" "(0)")) (sbox 'c-abstract-in 'absin "absin" nil 0 (list "amps" 1)) (make-instance 'c-pw-lispfun :view-position 7667785 :view-size 2228308 :active-mode nil :pw-function 'min :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "arg-0" :type-list 'nil) (make-instance 'c-ttybox :view-position 327723 :view-size 917540 :dialog-item-text "0" :doc-string "arg" :type-list 'nil)))) (list (list 0 0 10) (list 1 0 21) (list 2 0 1) (list 3 0 11) (list 5 0 18) (list 6 0 19) (list 7 0 10) (list 8 0 2) (list 9 0 5) (list 10 0 14) (list 11 0 7) (list 11 2 12) (list 12 1 6) (list 12 2 10) (list 12 3 17) (list 12 4 9) (list 13 0 4) (list 15 0 6) (list 16 0 9) (list 16 1 13) (list 16 2 15) (list 17 0 16) (list 18 0 8) (list 18 1 20) (list 19 0 2) (list 20 1 22) (list 22 0 8) (list 22 1 0)) nil)) (abst 'c-abstract-m 'user-abstraction::plot "plot-amps" nil 7405683 (list "nil" 20) '((common-lisp-user::spdata-seq spdata::spdata-seq (:view-size 917540 :doc-string "spdata" :value 'nil :dialog-item-text "()" :type-list (spdata::spdata-seq list))) (common-lisp-user::partials spdata::fix>0s? (:view-size 917540 :value 20 :min-val 0 :max-val 999999 :doc-string "fx/fl/l" :type-list (fixnum float list)))) 'nil (make-win 'c-pw-window "plot-amps" 3276995 37421467 (list (sbox 'c-abstract-out 'absout "absout" nil 32637167 (list "plot-amps")) (sbox 'c-patch 'posn-match "posn-match" nil 15794459 (list "(1 2)" 1)) (sbox 'c-patch 'g* "g*" nil 23068729 (list 0 1000)) (sbox 'c-pw-resize-x 'length "length" nil 10944564 (list "(1 2)") 2228270) (sbox 'c-patch 'arithm-ser "arithm-ser" nil 15532135 (list 0 1 10)) (sbox 'c-map-first 'pwmap "pwmap" nil 21561595 (list "foo" "(1 2)")) (sbox 'c-enum-collect-source 'enum "enum" nil 12845233 (list "(1 2)")) (sbox 'c-patch 'posn-match "posn-match" nil 12648737 (list "(1 2)" 0)) (sbox 'c-patch 'g- "g-" nil 13434889 (list 0 1)) (sbox 'c-patch 'g-scaling/max "g-scaling/max" nil 18809131 (list "(1 2)" 100)) (sbox 'c-abstract-in 'absin "absin" nil 65711 (list "partials" 2)) (sbox 'c-patch 'posn-match "posn-match" nil 16842758 (list "(1 2)" 0)) (sbox 'c-patch 'posn-match "posn-match" nil 19988480 (list "(1 2)" 0)) (sbox 'c-pw-functional 'g-round "g-round" nil 26083404 (list 0)) (sbox 'c-pw-functional 'create-list "create-list" nil 26476680 (list 10 0)) (sbox 'c-abstract-in 'absin "absin" nil 23 (list "spdata-seq" 1)) (sbox 'c-pw-functional 'list "list" nil 29425878 (list 0 0)) (sbox 'c-patch 'spdata:par-spdata-seq "par-spdata-seq" nil 7536776 (list "()" 1 20))) (list (list 0 0 16) (list 1 0 7) (list 2 0 12) (list 3 0 10) (list 4 2 8) (list 5 0 6) (list 5 1 9) (list 6 0 4) (list 7 0 17) (list 7 1 6) (list 8 0 3) (list 9 0 1) (list 11 0 17) (list 12 0 11) (list 13 0 2) (list 14 0 3) (list 14 1 13) (list 16 0 14) (list 16 1 5) (list 17 0 15) (list 17 2 10)) nil)) (abst 'c-abstract-m 'user-abstraction::sp-frams "sp-frams" nil 7405775 (list "nil") '((common-lisp-user::object object (:view-size 917540 :doc-string "obj" :value 'nil :dialog-item-text "()" :type-list nil))) 'nil (make-win 'c-pw-window "sp-frams" 9765228 16122120 (list (sbox 'c-abstract-in 'absin "absin" t 11 (list "object" 1)) (sbox 'c-map-first 'pwmap "pwmap" t 10616970 (list "foo" "(1 2)")) (sbox 'c-enum-collect-source 'enum "enum" t 5505127 (list "(1 2)")) (sbox 'c-patch 'get-slot "get-slot" t 3211444 (list "()" "frame")) (sbox 'c-pw-resize-x 'first "first" t 3145851 (list "(1 2)") 2228270) (sbox 'c-patch 'get-slot "get-slot" t 3407872 (list "()" "spdata")) (sbox 'c-abstract-out 'absout "absout" nil 13893785 (list "sp-frams"))) (list (list 1 0 2) (list 1 1 3) (list 2 0 5) (list 3 0 2) (list 4 0 5) (list 5 0 0) (list 6 0 1)) nil))) (list) t)