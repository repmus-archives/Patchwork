(in-package :pw)(make-win 'c-pw-window "l-stat-modif" 2490418 26083924 (list (abst 'c-abstract-m 'user-abstraction::->amps-bpf859 "->amps-bpf" nil 10813697 (list "(1 2)" 50) '((common-lisp-user::amps list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::ampmax common-lisp-user::nilnum (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "num" :type-list nil))) 'nil (make-win 'c-pw-window "->amps-bpf" 3276810 23200347 (list (sbox 'c-patch 'g* "g*" nil 6619300 (list 0 0.001)) (sbox 'c-pw-resize-x 'const "const" nil 2490382 (list "(1 2)") 2228270) (sbox 'c-patch 'spdata:par-spdata "par-spdata" nil 4915207 (list "()" 1)) (sbox 'c-abstract-out 'absout "absout" nil 15401463 (list "->amps-bpf")) (sbox 'c-pw-resize-x 'const "const" nil 3932393 (list "\"warning !! : ampmax < max from amps:\"") 2228486) (sbox 'c-pw-resize-x 'flat "flat" nil 17170520 (list "(1 2)") 2228270) (sbox 'c-patch 'g* "g*" nil 2949234 (list 0 1000)) (sbox 'c-pw-functional 'list "list" nil 2228675 (list 0)) (sbox 'c-enum-collect-source 'enum "enum" nil 7536650 (list "(1 2)")) (sbox 'c-patch 'g* "g*" nil 19791989 (list 0 1000)) (sbox 'c-pw-resize-x 'const "const" nil 786797 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'x-append "x-append" nil 8782274 (list "(0 0 0)" "(0)" "(1 2)" "(0)")) (sbox 'c-pw-test 'test "test" nil 13500695 (list ">" 0 0 0 0)) (sbox 'c-pw-functional 'print "print" nil 6291789 (list 0)) (sbox 'c-abstract-in 'absin "absin" nil 459016 (list "ampmax" 2)) (sbox 'c-pw-functional 'print "print" nil 6291838 (list 0)) (sbox 'c-pw-functional 'list "list" nil 9371902 (list 0 0 0)) (sbox 'c-pw-resize-x 'first "first" nil 9503064 (list "(1 2)") 2228270) (sbox 'c-map-first 'pwmap "pwmap" nil 14680110 (list "foo" "(1 2)")) (sbox 'c-pw-resize-x 'g-max "g-max" nil 458852 (list "(1 2)") 2228270) (sbox 'c-pw-functional 'x-append "x-append" nil 10551377 (list "(0)" "(1 2)" "(0)")) (sbox 'c-abstract-in 'absin "absin" nil 0 (list "amps" 1)) (make-instance 'c-pw-lispfun :view-position 7667785 :view-size 2228308 :active-mode nil :pw-function 'min :type-list 'nil :view-subviews (list (make-instance 'c-ttybox :view-position 327685 :view-size 917540 :dialog-item-text "0" :doc-string "arg-0" :type-list 'nil) (make-instance 'c-ttybox :view-position 327723 :view-size 917540 :dialog-item-text "0" :doc-string "arg" :type-list 'nil)))) (list (list 0 0 10) (list 1 0 21) (list 2 0 1) (list 3 0 11) (list 5 0 18) (list 6 0 19) (list 7 0 10) (list 8 0 2) (list 9 0 5) (list 10 0 14) (list 11 0 7) (list 11 2 12) (list 12 1 6) (list 12 2 10) (list 12 3 17) (list 12 4 9) (list 13 0 4) (list 15 0 6) (list 16 0 9) (list 16 1 13) (list 16 2 15) (list 17 0 16) (list 18 0 8) (list 18 1 20) (list 19 0 2) (list 20 1 22) (list 22 0 8) (list 22 1 0)) nil)) (sbox 'c-pw-functional 'spdata:mask-read "mask-read" nil 2687047 (list "nil" 0)) (sbox 'c-pw-resize-x 'const "const" nil 131082 (list "\"spdata-patches:data;eolien.aiff.a\"") 2228448) (sbox 'c-patch 'get-slot "get-slot" nil 6684771 (list "()" "spdata")) (sbox 'c-patch-buffer 'c-patch-buffer:buffer "buffer" nil 2687137 '(0) 2228270) (sbox 'c-pw-resize-x 'first "first" nil 9306269 (list "(1 2)") 2228270) (abst 'c-abstract-m 'user-abstraction::->freqs-bpf "->freqs-bpf" nil 13697259 (list "(1 2)" 1000) '((common-lisp-user::const list (:view-size 917540 :doc-string "lst" :value '(1 2) :dialog-item-text "(1 2)" :type-list nil)) (common-lisp-user::fmax fix/float (:view-size 917540 :value 0 :min-val -9999 :max-val 999999 :doc-string "fix/fl" :type-list (fixnum float)))) 'nil (make-win 'c-pw-window "->freqs-bpf" 2949166 27197845 (list (sbox 'c-abstract-in 'absin "absin" nil 262147 (list "spdata" 1)) (sbox 'c-pw-resize-x 'mat-trans "mat-trans" nil 13304009 (list "((1 2))") 2228270) (sbox 'c-pw-resize-x 'flat "flat" nil 15859927 (list "(1 2)") 2228270) (sbox 'c-abstract-in 'absin "absin" nil 655677 (list "fmax" 2)) (sbox 'c-pw-functional 'g-round "g-round" nil 18415837 (list 0)) (sbox 'c-pw-resize-x 'const "const" nil 7471129 (list "(1 2)") 2228270) (sbox 'c-abstract-out 'absout "absout" nil 19530015 (list "->freqs-bpf")) (sbox 'c-pw-functional 'x-append "x-append" nil 19071111 (list "(0 0)" "(1 2)" "(1 2)")) (sbox 'c-patch 'g- "g-" nil 10617020 (list 0 0)) (sbox 'c-patch 'g+ "g+" nil 19398677 (list 0 0)) (sbox 'c-patch 'g* "g*" nil 7930038 (list 0 2)) (sbox 'c-pw-functional 'list "list" nil 7274800 (list 0)) (sbox 'c-pw-resize-x 'numbox "numbox" nil 3932443 (list 0) 2228270) (sbox 'c-pw-functional 'list "list" nil 11403285 (list 0 0 0)) (sbox 'c-patch 'spdata:par-spdata "par-spdata" nil 4849788 (list "()" 2)) (sbox 'c-patch 'spdata:par-spdata "par-spdata" t 4063262 (list "()" 0)) (sbox 'c-patch 'spdata:filter-spdata "filter-spdata" nil 589983 (list "()" 1 0 1)) (sbox 'c-pw-resize-x 'const "const" nil 524388 (list "(1 2)") 2228270)) (list (list 1 0 13) (list 2 0 1) (list 4 0 2) (list 5 0 15) (list 6 0 7) (list 7 1 4) (list 7 2 11) (list 8 0 5) (list 8 1 10) (list 9 0 5) (list 9 1 10) (list 10 0 14) (list 11 0 12) (list 12 0 3) (list 13 0 8) (list 13 1 5) (list 13 2 9) (list 14 0 16) (list 15 0 16) (list 16 0 17) (list 16 2 12) (list 17 0 0)) nil)) (sbox 'c-patch 'spdata:l-moy "l-moy" nil 15990871 (list "()" 8)) (sbox 'c-patch-multi-function 'multi-bpf "bpf" nil 721377 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 65593 59 86 65624 90 110 112 114 140 65678 144 164 65702 168 211 262357 215 233 131307 237 261 131335 265 305 721203 309 336 131410 340 369 131443 373 394 262540 398 417 131491 421 438 262584 442 481 328163 485 527 524817 531 613 983655 617 657 459411 661 703 393921 707 742 393960 746 793 590619 797 836 1770310 840 880 590706 884 923 983965 927 961 525251 965 993 721891 997 1000 1180648 1000 1000 1442792 1000 1000 1442792 1000 1000 2163688 1000 1000 3277800 1000 1000 3277800 1000 1000) nil :bpf) ((3276800 0 55 65593 59 86 65624 90 110 112 114 140 65678 144 164 65702 168 211 262357 215 233 131307 237 261 131335 265 305 721203 309 336 131410 340 369 131443 373 394 262540 398 417 131491 421 438 262584 442 481 328163 485 527 524817 531 613 983655 617 657 459411 661 703 393921 707 742 393960 746 793 590619 797 836 1770310 840 880 590706 884 923 983965 927 961 525251 965 993 721891 997 1000 1180648 1000 1000 1442792 1000 1000 1442792 1000 1000 2163688 1000 1000 3277800 1000 1000 3277800 1000 1000)))) (sbox 'c-patch 'spdata:l-stat-modif "l-stat-modif" nil 12189842 (list "()" "1" "1.5" 3)) (sbox 'c-patch-multi-function 'multi-bpf "bpf1" nil 721211 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 1048633 59 86 589912 90 110 262256 114 140 458894 144 164 524454 168 211 1376469 215 233 524523 237 261 524551 265 305 2097459 309 336 328018 340 369 262515 373 394 393612 398 417 197027 421 438 328120 442 481 328163 485 527 393745 531 613 393831 617 657 131731 661 703 66241 707 742 66280 746 793 66331 797 836 197446 840 880 66418 884 923 66461 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) nil :bpf) ((3276800 0 55 1048633 59 86 589912 90 110 262256 114 140 458894 144 164 524454 168 211 1376469 215 233 524523 237 261 524551 265 305 2097459 309 336 328018 340 369 262515 373 394 393612 398 417 197027 421 438 328120 442 481 328163 485 527 393745 531 613 393831 617 657 131731 661 703 66241 707 742 66280 746 793 66331 797 836 197446 840 880 66418 884 923 66461 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)))) (sbox 'c-patch-multi-function 'multi-bpf "bpf2" nil 721294 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 393273 59 86 196696 90 110 131184 114 140 196750 144 164 262310 168 211 786645 215 233 327915 237 261 393479 265 305 1573171 309 336 262482 340 369 262515 373 394 393612 398 417 197027 421 438 393656 442 481 459235 485 527 590353 531 613 787047 617 657 328339 661 703 262849 707 742 197352 746 793 262939 797 836 721734 840 880 197490 884 923 328605 927 961 132035 965 993 197603 997 1000 263144 1000 1000 263144 1000 1000 197608 1000 1000 197608 1000 1000 328680 1000 1000 3277800 1000 1000) nil :bpf) ((3276800 0 55 393273 59 86 196696 90 110 131184 114 140 196750 144 164 262310 168 211 786645 215 233 327915 237 261 393479 265 305 1573171 309 336 262482 340 369 262515 373 394 393612 398 417 197027 421 438 393656 442 481 459235 485 527 590353 531 613 787047 617 657 328339 661 703 262849 707 742 197352 746 793 262939 797 836 721734 840 880 197490 884 923 328605 927 961 132035 965 993 197603 997 1000 263144 1000 1000 263144 1000 1000 197608 1000 1000 197608 1000 1000 328680 1000 1000 3277800 1000 1000)))) (sbox 'c-patch-multi-function 'multi-bpf "bpf3" nil 11862382 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 524345 59 86 393304 90 110 196720 114 140 458894 144 164 589990 168 211 1900757 215 233 852203 237 261 852231 265 305 3277107 309 336 524626 340 369 393587 373 394 590220 398 417 262563 421 438 459192 442 481 328163 485 527 262673 531 613 131687 617 657 659 661 703 705 707 742 744 746 793 795 797 836 838 840 880 882 884 923 925 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) nil :bpf) ((3276800 0 55 524345 59 86 393304 90 110 196720 114 140 458894 144 164 589990 168 211 1900757 215 233 852203 237 261 852231 265 305 3277107 309 336 524626 340 369 393587 373 394 590220 398 417 262563 421 438 459192 442 481 328163 485 527 262673 531 613 131687 617 657 659 661 703 705 707 742 744 746 793 795 797 836 838 840 880 882 884 923 925 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)))) (sbox 'c-patch 'spdata:l-moy "l-moy" nil 12976175 (list "()" 0)) (sbox 'c-patch-multi-function 'multi-bpf "bpf5" nil 16711919 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 524345 59 86 393304 90 110 196720 114 140 458894 144 164 589990 168 211 1900757 215 233 852203 237 261 852231 265 305 3277107 309 336 524626 340 369 393587 373 394 590220 398 417 262563 421 438 459192 442 481 328163 485 527 262673 531 613 131687 617 657 659 661 703 705 707 742 744 746 793 795 797 836 838 840 880 882 884 923 925 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) nil :bpf) ((3276800 0 55 524345 59 86 393304 90 110 196720 114 140 458894 144 164 589990 168 211 1900757 215 233 852203 237 261 852231 265 305 3277107 309 336 524626 340 369 393587 373 394 590220 398 417 262563 421 438 459192 442 481 328163 485 527 262673 531 613 131687 617 657 659 661 703 705 707 742 744 746 793 795 797 836 838 840 880 882 884 923 925 927 961 963 965 993 995 997 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)))) (sbox 'c-patch-multi-function 'multi-bpf "bpf4" nil 11796940 (list 10 "100" "Untitled") 7077972 '(((3276800 0 55 1048633 59 86 524376 90 110 196720 114 140 393358 144 164 393382 168 211 983253 215 233 393451 237 261 393479 265 305 1507635 309 336 196946 340 369 196979 373 394 328076 398 417 131491 421 438 262584 442 481 262627 485 527 328209 531 613 459367 617 657 197267 661 703 131777 707 742 131816 746 793 197403 797 836 459590 840 880 131954 884 923 263069 927 961 132035 965 993 197603 997 1000 328680 1000 1000 394216 1000 1000 459752 1000 1000 1115112 1000 1000 3277800 1000 1000 3277800 1000 1000) nil :bpf) ((3276800 0 55 1048633 59 86 524376 90 110 196720 114 140 393358 144 164 393382 168 211 983253 215 233 393451 237 261 393479 265 305 1507635 309 336 196946 340 369 196979 373 394 328076 398 417 131491 421 438 262584 442 481 262627 485 527 328209 531 613 459367 617 657 197267 661 703 131777 707 742 131816 746 793 197403 797 836 459590 840 880 131954 884 923 263069 927 961 132035 965 993 197603 997 1000 328680 1000 1000 394216 1000 1000 459752 1000 1000 1115112 1000 1000 3277800 1000 1000 3277800 1000 1000)))) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7930186 (list "original") 1900610) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7930260 (list "scalmoy = 1.5") 1900610) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 7930334 (list "scalmoy = 2") 1900610) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 18874746 (list "scal-ecart = 0.6") 1900615) (sbox 'c-pw-text-box:c-pw-text-box 'c-pw-text-box::text "text" nil 18874820 (list "scal-ecart = 1.5") 1966153)) (list (list 0 0 9) (list 1 0 2) (list 3 0 4) (list 4 0 1) (list 5 0 3) (list 6 0 9) (list 7 0 9) (list 9 0 5) (list 13 0 5) (list 14 0 6) (list 14 1 0)) t)