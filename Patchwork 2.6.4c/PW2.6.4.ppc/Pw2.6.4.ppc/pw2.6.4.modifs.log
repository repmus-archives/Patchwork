23/10/96---------Gestion des tempo changes lors de la lecture de MidiFilesMidiRecord.lisp----------------(defun logical-time (abstract-time cur-tempo tempo-change-abst-time tempo-change-log-time unit/sec)  (+ tempo-change-log-time     (round (* (/ 100.0 unit/sec)                (* (- abstract-time tempo-change-abst-time)                  (/ cur-tempo *midi-tempo*))))))(defun mievents2midilist (seq units/sec)  (when (and  midi::*pw-refnum* midi::*player* )    (let (event date initdate rep                (cur-tempo *midi-tempo*)                (tempo-change-abst-time 0)                (tempo-change-log-time 0))      (setf event (midishare::firstEv seq))      (setf initdate (midishare::date event))      (while (not (%null-ptr-p event))        (setf date (- (midishare::date event) initdate))        (case (midishare::type event)          (144  (unless *pw-recording-midi*                   (setf                    tempo-change-log-time (logical-time date cur-tempo tempo-change-abst-time tempo-change-log-time  units/sec)                   cur-tempo (midishare::tempo event)                   tempo-change-abst-time date ) )           )                    (0            (push (list (* 100 (midishare::pitch event))                       (convert-time (midishare::dur event) units/sec)                        (midishare::vel event)                       (1+ (midishare::chan event))                       (convert-time date units/sec))                 rep)           )          (1            (if (= (midishare::vel event) 0)             (close-notes-on rep                              (* 100 (midishare::pitch event))                              (1+ (midishare::chan event))                             (logical-time date  cur-tempo tempo-change-abst-time tempo-change-log-time  units/sec))             (push (list  (* 100 (midishare::pitch event))                           (logical-time date   cur-tempo tempo-change-abst-time tempo-change-log-time  units/sec)                          (midishare::vel event)                           (1+ (midishare::chan event))                          (logical-time date  cur-tempo tempo-change-abst-time tempo-change-log-time  units/sec))                   rep))           )          (2            (close-notes-on rep                            (* 100 (midishare::pitch event))                            (1+ (midishare::chan event))                           (logical-time date cur-tempo tempo-change-abst-time tempo-change-log-time  units/sec)                           )           ))        (setf event (midishare::link event)))      (midishare::MidiFreeSeq seq)      (reverse rep))))            (defun close-notes-on (list pitch chan data)   (flet ((match (x) (and (equal (first x) pitch) (equal (fourth x) chan))))    (let ((pos (position-if #'match list)))      (when pos        (setf (nth 1 (nth pos list))  (- data (nth 1 (nth pos list))))))))MidiPlay.lisp--------------Diverses modifications pour :le tempo dans play (mettre ticks a 500)les micro intervalles dans playMidiRecord.lisp----------------le tempo dans save (mettre ticks a 500)